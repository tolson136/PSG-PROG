DEF SHARED VAR XCOM AS INTEGER FORMAT "ZZ".
DEFINE SHARED VARIABLE XDIV AS INTEGER FORMAT "ZZ".
DEFINE SHARED VARIABLE XCOM-N AS CHAR FORMAT "X(30)".
DEFINE SHARED VARIABLE XDIV-N AS CHAR FORMAT "X(30)".
DEFINE SHARED VARIABLE XOPR AS CHAR FORMAT "XXX".
DEFINE VAR ANS AS LOGICAL
    LABEL "ARE YOU SURE THIS INFORMATION IS CORRECT ?".
DEFINE VAR SAN AS LOGICAL
    LABEL "IS THIS TICKET/JOB COMPLETED ?".
DEFINE VARIABLE BEG# AS INTEGER FORMAT "ZZ"
  LABEL "MONTH".
DEFINE VARIABLE F-CUST AS DECIMAL FORMAT "ZZZZZZZZZZ"
    LABEL "CUST #".
DEFINE VARIABLE F-PROP AS DECIMAL FORMAT "ZZZZZZZZZZ"
    LABEL "PROP #".
DEFINE VARIABLE F-ITEM AS INTEGER FORMAT "ZZZZ"
    LABEL "ITEM #".
DEFINE VARIABLE F-INDX AS INTEGER FORMAT "ZZ"
    LABEL "TICK INDEX".
DEFINE VAR F-NUM AS CHAR FORMAT "X(4)".
DEFINE VAR F-MAN AS INTEGER FORMAT "ZZZ".
DEF VAR F-DATE AS DATE FORMAT "99/99/9999".
def var x-date as date format "99/99/9999".
def var ctr as int.
def var counter as int.
def var oldchoice as char.
def var oddchoice as char.
def var cl-d as int.
def var cl-m as int.
def var cl-y as int format "9999".
IF (USERID = "OPERATIONS") OR (USERID = "LANDMARK") OR (USERID = "GARCIA")
THEN DO:
    MESSAGE "YOU ARE NOT AUTHORIZED TO RUN THIS PROCEDURE".
    RETURN.
END.
REPEAT:
DISPLAY SPACE(12)
"R E T U R N E D   T I C K E T   I N P U T   S C R E E N"
    SKIP(0)
XCOM-N LABEL "CO" XDIV-N LABEL "DV" XOPR LABEL "OPER"
SKIP(1) WITH FRAME X NO-BOX SIDE-LABELS.
PROMPT-FOR TICKET.CUST#
           TICKET.PROPSL#
           TICKET.ITEM#
           TICKET.MONTH#
           TICKET.T-INDX WITH FRAME X NO-BOX SIDE-LABELS.
F-CUST = INPUT TICKET.CUST#.
BEG# = INPUT TICKET.MONTH#.
F-PROP = INPUT TICKET.PROPSL#.
F-ITEM = INPUT TICKET.ITEM#.
F-INDX = INPUT TICKET.T-INDX.
FIND FIRST TICKET WHERE TICKET.COMP# = XCOM AND
                  TICKET.DIV# = XDIV AND
                  TICKET.CUST# = F-CUST AND
                  TICKET.PROPSL# = F-PROP AND
                  TICKET.ITEM# = F-ITEM AND
                  TICKET.MONTH# = BEG# AND
                  TICKET.T-INDX = F-INDX AND
                  TICKET.T-STAT <> "X" AND
                  TICKET.T-STAT <> "W" NO-ERROR.
IF NOT AVAILABLE TICKET THEN DO:
    MESSAGE "THIS TICKET DOES NOT EXIST OR HAS ALREADY BEEN PROCESSED".
    UNDO, RETRY.
END.
FIND FIRST PRO-DESP WHERE PRO-DESP.COMP# = XCOM AND
                    PRO-DESP.DIV# = XDIV AND
                    PRO-DESP.CUST# = F-CUST AND
                    PRO-DESP.PROPSL# = F-PROP AND
                    PRO-DESP.ITEM# = F-ITEM NO-ERROR.
IF NOT AVAILABLE PRO-DESP THEN DO:
    MESSAGE "THIS PROPOSAL DESCRIPTION NO LONGER EXISTS".
    UNDO, RETRY.
END.
DISPLAY TICKET.CUST# LABEL "CUST #"
        TICKET.PROPSL# LABEL "PROP #"
        TICKET.ITEM# LABEL "ITEM #"
        TICKET.MONTH# LABEL "MONTH"
        TICKET.T-INDX LABEL "TICK INDEX" SKIP(1)
        TICKET.M-NUM LABEL "MANAGER #" SPACE(1)
        TICKET.M-NAME LABEL "MANAGER NAME" SKIP(0)
        TICKET.FREQ LABEL "FREQUENCY" SPACE(5)
        PRO-DESP.CL-DATE LABEL "COMPLETION DATE OF CLEANING" SKIP(0) SPACE(10)
        TICKET.DL-BUD LABEL "D/L BUD  " SPACE(10)
        TICKET.WK-DL-BUD LABEL "WK DL BUD" SKIP(0) SPACE(10)
        TICKET.DL LABEL "D/L USE  " SPACE(10)
        TICKET.WK-DL LABEL "WK DL USE" SKIP(0) SPACE(10)
        TICKET.DL-BAL LABEL "D/L BAL  " SPACE(10)
        TICKET.WK-DL-BAL SKIP(1) SPACE(20)
        WITH FRAME X NO-BOX SIDE-LABELS.
/*  IF TICKET.WK-DL-BAL = 0.00
    THEN DO:
        BELL.
        HIDE MESSAGE.
        MESSAGE COLOR BLINK "WEEKLY D/L BALANCE = ZERO".
        BELL.
        UNDO, RETRY.
    END.                       */
      PROMPT-FOR TICKET.M-NUM WITH FRAME X NO-BOX SIDE-LABELS.
      F-MAN = INPUT TICKET.M-NUM.
      FIND FIRST SALESMAN WHERE SLS# = F-MAN NO-ERROR.
      IF NOT AVAILABLE SALESMAN THEN DO:
              MESSAGE "THIS MANAGER IS NOT KNOWN".
              UNDO, RETRY.
      END.
      TICKET.M-NUM = F-MAN.
      TICKET.M-NAME = SALESMAN.SLSNAME.
      DISPLAY TICKET.M-NUM TICKET.M-NAME WITH FRAME X NO-BOX SIDE-LABELS.
REPEAT:
IF LASTKEY = KEYCODE("ESC") OR LASTKEY = KEYCODE("F4") THEN LEAVE.
CREATE EMPLOYEE.
      EMPLOYEE.M-NUM = SALESMAN.SLS#.
      EMPLOYEE.M-NAME = SALESMAN.SLSNAME.
      PROMPT-FOR EMPLOYEE.E-NUM WITH FRAME X NO-BOX SIDE-LABELS.
      F-NUM = INPUT EMPLOYEE.E-NUM.
      FIND FIRST EMP-NAME WHERE EMP-NAME.E-NUM = F-NUM AND
                          EMP-NAME.COMP# = XCOM NO-ERROR.
      IF NOT AVAILABLE EMP-NAME THEN DO:
          MESSAGE "THIS EMPLOYEE DOES NOT EXIST".
          UNDO, RETRY.
      END.
      EMPLOYEE.E-NUM = EMP-NAME.E-NUM.
      EMPLOYEE.E-NAME = EMP-NAME.E-NAME.
        DISPLAY SPACE(5)
                EMPLOYEE.E-NUM LABEL "ENTER EMP #" SPACE(1)
                EMPLOYEE.E-NAME LABEL "EMP NAME" SKIP(1)
                WITH FRAME X NO-BOX SIDE-LABELS.
TICKET.COMP# = XCOM.
TICKET.DIV# = XDIV.
DISPLAY SPACE(25)
        TICKET.RET LABEL "WAS TICKET RETURNED ?" SKIP(0) SPACE(25)
        EMPLOYEE.WDATE LABEL "DATE OF WORK    " SKIP(0) SPACE(25)
        EMPLOYEE.WHOURS LABEL "HOURS OF WORK   " SKIP(0) SPACE(25)
        EMPLOYEE.TOT-AMT LABEL "$ AMOUNT OF WORK"
        WITH FRAME X NO-BOX SIDE-LABELS.
        UPDATE TICKET.RET EMPLOYEE.WDATE EMPLOYEE.WHOURS EMPLOYEE.TOT-AMT
               WITH FRAME X COLOR DISPLAY NORMAL PROMPT W/MA.
        F-DATE = EMPLOYEE.WDATE.
        IF LASTKEY = KEYCODE("ESC") OR LASTKEY = KEYCODE("F4")
            THEN UNDO, LEAVE.
        IF EMPLOYEE.TOT-AMT + TICKET.WK-DL + TICKET.DL >
            TICKET.DL-BUD THEN DO:
            BELL.
            MESSAGE COLOR BLINK "AMOUNT EXCEEDS BUDGET, APPROVAL REQUIRED".
            MESSAGE COLOR BLINK "NO UPDATING TOOK PLACE".
            BELL.
            UNDO, RETRY.
        END.
/*        IF TICKET.WK-DL-BUD = 0.00
            THEN DO:
                BELL.
                HIDE MESSAGE.
                MESSAGE COLOR BLINK "WEEKLY D/L = ZERO".
                BELL.
                UNDO, RETRY.
            END.                    */
        EMPLOYEE.M-NUM = SALESMAN.SLS#.
        EMPLOYEE.M-NAME = SALESMAN.SLSNAME.
        EMPLOYEE.COMP# = TICKET.COMP#.
        EMPLOYEE.CUST# = TICKET.CUST#.
        EMPLOYEE.DATE-RET = TODAY.
        EMPLOYEE.DIV# = TICKET.DIV#.
        EMPLOYEE.ITEM# = TICKET.ITEM#.
        EMPLOYEE.MONTH# = TICKET.MONTH#.
        EMPLOYEE.PROPSL# = TICKET.PROPSL#.
        EMPLOYEE.T-INDX = TICKET.T-INDX.
        TICKET.WK-DL = TICKET.WK-DL + EMPLOYEE.TOT-AMT.
        TICKET.WK-DL-BAL = TICKET.WK-DL-BAL - EMPLOYEE.TOT-AMT.
        TICKET.M-NUM = EMPLOYEE.M-NUM.
        TICKET.M-NAME = EMPLOYEE.M-NAME.
        ANS = no.
        UPDATE ANS WITH ROW FRAME-ROW + 14 + FRAME-LINE + 5 COLUMN 20
                   WITH SIDE-LABELS OVERLAY FRAME DEL-FRAME NO-BOX
                   COLOR DISPLAY W/RED PROMPT RED/W.
        IF ANS THEN DO:
            DISPLAY TICKET.WK-DL TICKET.WK-DL-BAL WITH FRAME X.
            RELEASE EMPLOYEE.
        END.
        ELSE DO:
            UNDO, RETRY.
        END.
        HIDE FRAME DEL-FRAME.
  END.
        SAN = no.
        UPDATE SAN WITH ROW FRAME-ROW + 15 + FRAME-LINE + 5 COLUMN 20
                   WITH SIDE-LABELS OVERLAY FRAME DEL-FRA NO-BOX
                   COLOR DISPLAY W/RED PROMPT RED/W.
        IF SAN THEN DO:
            PRO-DESP.CL-DATE = F-DATE.
            DISPLAY PRO-DESP.CL-DATE WITH FRAME X.
            TICKET.T-STAT = "C".
            UPDATE PRO-DESP.CL-DATE
                WITH FRAME X COLOR DISPLAY NORMAL PROMPT W/MA
  editing:
   readkey.
   if lastkey <> keycode("ALT-C")
    then do:
     apply lastkey.
     if go-pending
     then leave.
     else next.
    end.
/******************************************************************/
    {tk-ret.i}
/******************************************************************/
  end.
            x-date = ticket.date-ret.
            UPDATE TICKET.DATE-RET = PRO-DESP.CL-DATE.
            find first cl-date use-index indx06 where
                                     cl-date.comp# = ticket.comp# and
                                     cl-date.div# = ticket.div# and
                                     cl-date.cust# = ticket.cust# and
                                     cl-date.propsl# = ticket.propsl# and
                                     cl-date.month# = ticket.month# and
                                     cl-date.item# = ticket.item# and
                                     cl-date.t-indx = ticket.t-indx and
                                     (cl-date.date-ret = x-date or
                                      cl-date.date-ret = 01/01/9999) no-error.
            if not available cl-date then do:
                CREATE CL-DATE.
                    CL-DATE.CL-DATE = F-DATE.
                    CL-DATE.COMP# = TICKET.COMP#.
                    CL-DATE.CUST# = TICKET.CUST#.
                    CL-DATE.DATE-RET = TICKET.DATE-RET.
                    CL-DATE.DIV# = TICKET.DIV#.
                    CL-DATE.FREQ = TICKET.FREQ.
                    CL-DATE.ITEM# = TICKET.ITEM#.
                    CL-DATE.M-NUM = TICKET.M-NUM.
                    CL-DATE.MONTH# = TICKET.MONTH#.
                    CL-DATE.PROPSL# = TICKET.PROPSL#.
                    CL-DATE.ROUTE# = TICKET.ROUTE#.
                    CL-DATE.SUB# = TICKET.SUB#.
                    CL-DATE.T-INDX = TICKET.T-INDX.
                RELEASE CL-DATE.
            end.
            else do:
                update cl-date.date-ret = ticket.date-ret.
                update cl-date.cl-date = f-date.
                update cl-date.m-num = ticket.m-num.
            end.
        END.
        ELSE DO:
            TICKET.T-STAT = "I".
        END.
END.
