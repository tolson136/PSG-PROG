DEFINE SHARED VARIABLE XCOM AS INTEGER FORMAT "ZZ".
DEFINE SHARED VARIABLE XDIV AS INTEGER FORMAT "ZZ".
DEFINE SHARED VARIABLE XCOM-N AS CHAR FORMAT "X(30)".
DEFINE SHARED VARIABLE XDIV-N AS CHAR FORMAT "X(30)".
DEFINE SHARED VARIABLE XOPR AS CHAR FORMAT "XXX".
DEFINE VAR ANS AS LOGICAL
    LABEL "ARE YOU SURE THIS INFORMATION IS CORRECT ?".
DEFINE VAR F-NUM AS INTEGER FORMAT "ZZZ".
DEFINE VAR BDATE AS DATE FORMAT "99/99/9999".
DEFINE VAR EDATE AS DATE FORMAT "99/99/9999".
DEFINE VAR F-TIME AS LOGICAL.
DEFINE VAR H-CUST AS DECIMAL FORMAT "ZZZZZZZZZZ".
DEFINE VAR PER-CENT AS DECIMAL FORMAT "ZZZ.99".
DEFINE VAR XWK-DL AS DECIMAL FORMAT "$->>>,>>>.99".
DEFINE VAR XWK-DL-BUD AS DECIMAL FORMAT "$->>>,>>>.99".
DEFINE VAR XWK-DL-BAL AS DECIMAL FORMAT "$->>>,>>>.99".
DEFINE VAR XDL AS DECIMAL FORMAT "$->>>,>>>.99".
DEFINE VAR XDL-BUD AS DECIMAL FORMAT "$->>>,>>>.99".
DEFINE VAR XDL-BAL AS DECIMAL FORMAT "$->>>,>>>.99".
DEFINE VAR XWK-START AS DECIMAL FORMAT "$->>>,>>>.99".
DEFINE VAR XWK-USED AS DECIMAL FORMAT "$->>>,>>>.99".
DEFINE VAR XWK-BAL AS DECIMAL FORMAT "$->>>,>>>.99".
DEFINE VAR XMTD-VOL AS DECIMAL FORMAT "$->>>,>>>.99".
DEFINE VAR XWTD-VOL AS DECIMAL FORMAT "$->>>,>>>.99".
DEFINE VAR XTOT-AMT AS DECIMAL FORMAT "$->>>,>>>.99".
DEFINE VAR ZWK-DL AS DECIMAL FORMAT "$->>>,>>>.99".
DEFINE VAR ZWK-DL-BUD AS DECIMAL FORMAT "$->>>,>>>.99".
DEFINE VAR ZWK-DL-BAL AS DECIMAL FORMAT "$->>>,>>>.99".
DEFINE VAR ZDL AS DECIMAL FORMAT "$->>>,>>>.99".
DEFINE VAR ZDL-BUD AS DECIMAL FORMAT "$->>>,>>>.99".
DEFINE VAR ZDL-BAL AS DECIMAL FORMAT "$->>>,>>>.99".
DEFINE VAR ZWK-START AS DECIMAL FORMAT "$->>>,>>>.99".
DEFINE VAR ZWK-USED AS DECIMAL FORMAT "$->>>,>>>.99".
DEFINE VAR ZWK-BAL AS DECIMAL FORMAT "$->>>,>>>.99".
DEFINE VAR ZMTD-VOL AS DECIMAL FORMAT "$->>>,>>>.99".
DEFINE VAR ZWTD-VOL AS DECIMAL FORMAT "$->>>,>>>.99".
DEFINE VAR ZTOT-AMT AS DECIMAL FORMAT "$->>>,>>>.99".
DEFINE VAR FINAL AS LOGICAL.
DEF VAR CLEAR-MO AS LOGICAL LABEL "SHOULD MONTH TO DATE FIELDS BE CLEARED ?".
DEF VAR PDL AS LOGICAL LABEL "PRINT ACCOUNTS WITH ZERO DL FOR THIS PERIOD ?".
IF (USERID = "OPERATIONS") OR (USERID = "LANDMARK") OR (USERID = "GARCIA")
THEN DO:
    MESSAGE "YOU ARE NOT AUTHORIZED TO RUN THIS PROCEDURE".
    RETURN.
END.
PDL = no.
F-TIME = yes.
REPEAT:
DISPLAY SPACE(9)
"W E E K L Y   P A Y R O L L   P R O C E S S I N G   S C R E E N"
    SKIP(1)
XCOM-N LABEL "CO" XDIV-N LABEL "DV" XOPR LABEL "OPER"
SKIP(5) WITH NO-BOX SIDE-LABELS.
      UPDATE BDATE LABEL "ENTER WEEK BEGINNING DATE"
          WITH NO-BOX SIDE-LABELS.
      IF LASTKEY = KEYCODE("F4") THEN LEAVE.
      IF LASTKEY = KEYCODE("ESC") THEN LEAVE.
      UPDATE EDATE LABEL "ENTER WEEK ENDING DATE" SKIP(1)
          WITH NO-BOX SIDE-LABELS.
      UPDATE FINAL LABEL "FINAL RUN OF THE WEEK ?" SKIP(1)
          WITH NO-BOX SIDE-LABELS.
      IF FINAL THEN UPDATE CLEAR-MO SKIP(1) WITH NO-BOX SIDE-LABELS.
      UPDATE PDL SKIP(1) WITH NO-BOX SIDE-LABELS.
      PROMPT-FOR TICKET.M-NUM LABEL "ENTER MANAGER #"
          WITH NO-BOX SIDE-LABELS.
      F-NUM = INPUT TICKET.M-NUM.
      FIND LAST TICKET WHERE TICKET.M-NUM = F-NUM NO-ERROR.
      IF NOT AVAILABLE TICKET THEN DO:
          MESSAGE "THIS MANAGER HAS NO TRANSACTIONS AVAILABLE".
          UNDO, RETRY.
      END.
      DISPLAY TICKET.M-NAME LABEL "MANAGER" WITH NO-BOX SIDE-LABELS.
      LEAVE.
END.
      IF LASTKEY = KEYCODE("F4") THEN LEAVE.
      IF LASTKEY = KEYCODE("ESC") THEN LEAVE.
HIDE.
IF FINAL THEN DO:
 FOR EACH TICKET /* USE-INDEX INDX4 */
                 WHERE TICKET.COMP# = XCOM AND
                       TICKET.DIV# = XDIV AND
                       TICKET.M-NUM = F-NUM AND
                       TICKET.T-STAT <> "X":
  IF TICKET.WK-DL <> 0.00 THEN DO:
    TICKET.WK-USED = (TICKET.WK-DL / TICKET.WK-DL-BUD) * TICKET.WK-START.
    TICKET.WK-BAL = TICKET.WK-START - TICKET.WK-USED.
    IF CLEAR-MO THEN TICKET.DL-LAST = TICKET.DL.
    TICKET.DL = TICKET.DL + TICKET.WK-DL.
    TICKET.DL-BAL = TICKET.DL-BUD - TICKET.DL.
    TICKET.WTD-VOL = (TICKET.DL / TICKET.DL-BUD) * TICKET.TOT-AMT.
    TICKET.MTD-VOL = TICKET.TOT-AMT - TICKET.WK-START.
  END.
  IF TICKET.WK-DL = 0.00 THEN DO:
    TICKET.WK-USED = 0.00.
    TICKET.WK-START = TICKET.WK-BAL.
    TICKET.MTD-VOL = TICKET.WTD-VOL.
  END.
 END.
 FOR EACH TICKET /* USE-INDEX INDX4 */
                 WHERE TICKET.COMP# = XCOM AND
                       TICKET.DIV# = XDIV AND
                       TICKET.M-NUM = F-NUM AND
                       TICKET.T-STAT <> "X" BREAK BY TICKET.CUST#:
   IF NOT PDL AND TICKET.WK-DL = 0.00 THEN NEXT.
    FIND FIRST ACCT-RCV WHERE ACCT-RCV.COMP# = TICKET.COMP# AND
                        ACCT-RCV.DIV# = TICKET.DIV# AND
                        ACCT-RCV.CUST# = TICKET.CUST# AND
                        ACCT-RCV.C-STATUS <> "I" NO-ERROR.
    IF NOT AVAILABLE ACCT-RCV THEN NEXT.
    XWK-DL = XWK-DL + TICKET.WK-DL.
    XWK-DL-BUD = XWK-DL-BUD + TICKET.WK-DL-BUD.
    XWK-DL-BAL = XWK-DL-BAL + TICKET.WK-DL-BAL.
    XDL = XDL + TICKET.DL.
    XDL-BUD = XDL-BUD + TICKET.DL-BUD.
    XDL-BAL = XDL-BAL + TICKET.DL-BAL.
    XWK-START = XWK-START + TICKET.WK-START.
    XWK-USED = XWK-USED + TICKET.WK-USED.
    XWK-BAL = XWK-BAL + TICKET.WK-BAL.
    XMTD-VOL = XMTD-VOL + TICKET.MTD-VOL.
    XWTD-VOL = XWTD-VOL + TICKET.WTD-VOL.
    XTOT-AMT = XTOT-AMT + TICKET.TOT-AMT.
    IF ROUND((TICKET.WK-DL / TICKET.WK-USED), 2) * 100 > 100.00
       THEN PER-CENT = 000.00.
    ELSE
            PER-CENT = ROUND((TICKET.WK-DL / TICKET.WK-USED), 2) * 100.
 END.
 PER-CENT = ROUND((XWK-DL / XWK-USED), 2) * 100.
 FOR EACH TICKET /* USE-INDEX INDX5 */
                 WHERE TICKET.COMP# = XCOM AND
                       TICKET.DIV# = XDIV AND
                       TICKET.M-NUM = F-NUM AND
                       TICKET.T-STAT <> "X":
            IF TICKET.T-STAT = "W" THEN TICKET.T-STAT = "X".
            IF TICKET.WK-DL <> 0.00 THEN DO:
                TICKET.WK-DL = 0.
                TICKET.WK-DL-BUD = TICKET.WK-DL-BAL.
                TICKET.WK-DL-BAL = TICKET.WK-DL-BUD - TICKET.WK-DL.
                TICKET.WK-START = TICKET.WK-BAL.
            END.
            IF CLEAR-MO THEN TICKET.MTD-VOL = 0.00.
            IF CLEAR-MO AND TICKET.T-STAT = "W" THEN TICKET.T-STAT = "X".
            IF CLEAR-MO AND TICKET.COMP# = 4 AND TICKET.DIV# = 1 AND
               TICKET.T-STAT = "C" THEN TICKET.T-STAT = "X".
 END.
END.
ELSE DO:
 FOR EACH TICKET /* USE-INDEX INDX4 */
                 WHERE TICKET.COMP# = XCOM AND
                       TICKET.DIV# = XDIV AND
                       TICKET.M-NUM = F-NUM AND
                       TICKET.T-STAT <> "X" BREAK BY TICKET.CUST#:
    IF NOT PDL AND TICKET.WK-DL = 0.00 THEN NEXT.
    ZWK-DL = TICKET.WK-DL.
    ZWK-DL-BUD = TICKET.WK-DL-BUD.
    ZWK-DL-BAL = TICKET.WK-DL-BAL.
    ZDL = TICKET.DL.
    ZDL-BUD = TICKET.DL-BUD.
    ZDL-BAL = TICKET.DL-BAL.
    ZWK-START = TICKET.WK-START.
    ZWK-USED = TICKET.WK-USED.
    ZWK-BAL = TICKET.WK-BAL.
    ZMTD-VOL = TICKET.MTD-VOL.
    ZWTD-VOL = TICKET.WTD-VOL.
    ZTOT-AMT = TICKET.TOT-AMT.
  IF ZWK-DL <> 0.00 THEN DO:
    ZWK-USED = (ZWK-DL / ZWK-DL-BUD) * ZWK-START.
    ZWK-BAL = ZWK-START - ZWK-USED.
    ZDL = ZDL + ZWK-DL.
    ZDL-BAL = ZDL-BUD - ZDL.
    ZWTD-VOL = (ZDL / ZDL-BUD) * ZTOT-AMT.
    ZMTD-VOL = ZTOT-AMT - ZWK-START.
  END.
  IF ZWK-DL = 0.00 THEN DO:
    ZWK-USED = 0.00.
    ZWK-START = ZWK-BAL.
    ZMTD-VOL = ZWTD-VOL.
  END.
    FIND FIRST ACCT-RCV WHERE ACCT-RCV.COMP# = TICKET.COMP# AND
                        ACCT-RCV.DIV# = TICKET.DIV# AND
                        ACCT-RCV.CUST# = TICKET.CUST#.
    XWK-DL = XWK-DL + ZWK-DL.
    XWK-DL-BUD = XWK-DL-BUD + ZWK-DL-BUD.
    XWK-DL-BAL = XWK-DL-BAL + ZWK-DL-BAL.
    XDL = XDL + ZDL.
    XDL-BUD = XDL-BUD + ZDL-BUD.
    XDL-BAL = XDL-BAL + ZDL-BAL.
    XWK-START = XWK-START + ZWK-START.
    XWK-USED = XWK-USED + ZWK-USED.
    XWK-BAL = XWK-BAL + ZWK-BAL.
    XMTD-VOL = XMTD-VOL + ZMTD-VOL.
    XWTD-VOL = XWTD-VOL + ZWTD-VOL.
    XTOT-AMT = XTOT-AMT + ZTOT-AMT.
    IF ROUND((ZWK-DL / ZWK-USED), 2) * 100 > 100.00
       THEN PER-CENT = 000.00.
    ELSE
            PER-CENT = ROUND((ZWK-DL / ZWK-USED), 2) * 100.
 END.
 PER-CENT = ROUND((XWK-DL / XWK-USED), 2) * 100.
END.
