/*************************************************/
/* tk-addr.p                                     */
/*                                               */
/* Add 1 monthly ticket                          */
/*                                               */
/*  04/02/2018   TO    Added laser print option  */
/*                     Added test mode flag      */
/*                                               */
/*************************************************/


DEFINE SHARED VARIABLE TestMode AS LOGICAL.
DEFINE SHARED VARIABLE LaserPrint AS LOGICAL.
DEFINE SHARED VARIABLE XCOM AS INTEGER FORMAT "ZZ".
DEFINE SHARED VARIABLE XDIV AS INTEGER FORMAT "ZZ".
DEFINE SHARED VARIABLE XCOM-N AS CHAR FORMAT "X(30)".
DEFINE SHARED VARIABLE XDIV-N AS CHAR FORMAT "X(30)".
DEFINE SHARED VARIABLE XOPR AS CHAR FORMAT "XXX".
DEFINE SHARED VARIABLE ProcessMonth AS INTEGER FORMAT "ZZ"
  LABEL "ENTER MONTH & YEAR FOR WHICH YOU WANT TO RUN TICKETS".
DEFINE VARIABLE H-FREQ AS CHAR FORMAT "X(5)".

DEFINE SHARED VARIABLE ProcessYear AS INTEGER FORMAT "9999" LABEL "YEAR (4 DIGITS)".
DEFINE VARIABLE TICKS AS INTEGER FORMAT "9999".
DEFINE VARIABLE F-TICK AS LOGICAL.
DEFINE VARIABLE H-WEEK AS INTEGER FORMAT "9".

DEFINE SHARED VARIABLE DaysInMonth AS INTEGER FORMAT "99".
DEFINE VARIABLE C-DATE AS DATE FORMAT "99/99/9999".
DEFINE SHARED VARIABLE F-CUST AS DECIMAL FORMAT "ZZZZZZZZZZ"
    LABEL "CUSTOMER NUMBER".
DEFINE SHARED VARIABLE F-PROP AS DECIMAL FORMAT "ZZZZZZZZZZ"
    LABEL "PROPOSAL NUMBER".
DEFINE SHARED VARIABLE F-ITEM AS INTEGER FORMAT "ZZZZ"
    LABEL "ITEM NUMBER".
DEFINE SHARED VARIABLE F-INDEX AS INTEGER FORMAT "ZZ"
    LABEL "TICK INDEX".
DEF VAR FirstMonthDate AS DATE NO-UNDO.
DEF VAR LastMonthDate AS DATE NO-UNDO.    

DEFINE VARIABLE TicketsPerPage AS INT INIT 3.
DEFINE VARIABLE CurrentTicket  AS INT INIT 1. /* count within expect tickets per*/
DEFINE VARIABLE TicketCount    AS INT INIT 1. /* Count on page */
DEF VAR CoProposal AS CHAR FORMAT "X(30)".
DEF VAR ttDocXSequence AS INT.
DEF VAR FileName AS CHAR.
DEF VAR Cmd AS CHAR.
def var itemcount as int.
DEFINE VARIABLE DayCount AS INTEGER FORMAT "99".

DEF TEMP-TABLE ttDocXPrint
  FIELD Idx AS INT 
  FIELD Week AS CHAR
  FIELD CoProposal AS CHAR
  FIELD Location AS CHAR
  FIELD Note1 AS CHAR
  FIELD Note2 AS CHAR
  FIELD Note3 AS CHAR
  FIELD Note4 AS CHAR
  FIELD Note5 AS CHAR
  FIELD Note6 AS CHAR
  FIELD Note7 AS CHAR
  FIELD Note8 AS CHAR
  FIELD Note9 AS CHAR
  FIELD Note10 AS CHAR
  FIELD StartEndCodEquip AS CHAR
  FIELD SpcIntr AS CHAR
  FIELD Name AS CHAR
  FIELD Address AS CHAR
  FIELD Address2 AS CHAR
  FIELD City AS CHAR
  FIELD Phone AS CHAR FORMAT "XXX-XXX-XXXX"
  FIELD EMail AS CHAR
  FIELD Price AS DEC FORMAT "$9,999.99"
  FIELD Weeks AS CHAR
  FIELD Days AS CHAR
  FIELD wScheduled AS LOG
  FIELD dScheduled AS LOG
  .
{slibooxml/slibdocx.i}
{include/stdutils.i}
{slib/slibos.i}
    
ASSIGN 
  FirstMonthDate  = DATE(ProcessMonth,1,ProcessYear)
  LastMonthDate   = DATE(ProcessMonth,DaysInMonth(ProcessMonth,ProcessYear),ProcessYear)
  .
    
IF (USERID = "OPERATIONS") OR (USERID = "LANDMARK") OR (USERID = "GARCIA")
THEN DO:
    MESSAGE "YOU ARE NOT AUTHORIZED TO RUN THIS PROCEDURE".
    RETURN.
END.
OUTPUT TO TERMINAL.
  FIND FIRST ACCT-RCV WHERE ACCT-RCV.COMP# = XCOM AND
			    ACCT-RCV.DIV# = XDIV  AND
			    ACCT-RCV.CUST# = F-CUST AND
			    ACCT-RCV.C-STATUS <> "I" NO-ERROR.
  IF NOT AVAILABLE ACCT-RCV THEN DO:
      MESSAGE "CUSTOMER DOES NOT EXIST OR IS INACTIVE".
      NEXT.
  END.   
  IF ACCT-RCV.C-STATUS = "I" THEN NEXT.
  FIND FIRST PROPSL WHERE PROPSL.COMP# = XCOM AND
			  PROPSL.DIV# = XDIV AND
			  PROPSL.CUST# = F-CUST AND
			  PROPSL.PROPSL# = F-PROP NO-LOCK NO-ERROR.
  IF NOT AVAILABLE PROPSL THEN DO:
      MESSAGE "THAT PROPOSAL DOES NOT EXIST FOR THIS CUSTOMER".
      NEXT.
  END.
    IF PROPSL.JANITOR = yes THEN DO:
	   MESSAGE "THIS IS A JANITORIAL TICKET".
	   NEXT.
  END.
  IF NOT ( Propsl.StartDate LE LastMonthDate OR Propsl.StartDate = ?) AND
         ( Propsl.EndDate GE FirstMonthDate OR Propsl.EndDate = ?) THEN DO:
      MESSAGE "Customer is outside of their active dates".
      NEXT.         
  END.      
  FIND FIRST PRO-DESP WHERE PRO-DESP.COMP# = XCOM AND
			    PRO-DESP.DIV# = XDIV AND
			    PRO-DESP.CUST# = F-CUST AND
			    PRO-DESP.PROPSL# = F-PROP AND
			    PRO-DESP.ITEM# = F-ITEM NO-LOCK NO-ERROR.
  IF NOT AVAILABLE PRO-DESP THEN DO:
      MESSAGE "THAT ITEM DOES NOT EXIST FOR THIS CUSTOMER AND PROPOSAL".
      NEXT.
  END.
IF LASTKEY = KEYCODE("F4") THEN LEAVE.
IF LASTKEY = KEYCODE("ESC") THEN LEAVE.
      F-TICK = no.
      H-FREQ = "".
      IF PRO-DESP.FREQ = "DAILY" THEN DO:
	       H-FREQ = "D".
	       TICKS = DaysInMonth.
	       F-TICK = yes.
      END.
      IF PRO-DESP.FREQ = "TWO_TIMES_PER_WEEK" THEN DO:
	  H-FREQ = "2XW".
	  TICKS = 0.
	  F-TICK = yes.
	  REPEAT DayCount = 1 TO DaysInMonth:
	      C-DATE = DATE(ProcessMonth,DayCount,ProcessYear).
	      H-WEEK = WEEKDAY(C-DATE).
	      IF H-WEEK = 1 AND PRO-DESP.WKDAY[2] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 2 AND PRO-DESP.WKDAY[3] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 3 AND PRO-DESP.WKDAY[4] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 4 AND PRO-DESP.WKDAY[5] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 5 AND PRO-DESP.WKDAY[6] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 6 AND PRO-DESP.WKDAY[7] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 7 AND PRO-DESP.WKDAY[1] THEN TICKS = TICKS + 1.
	  END.
      END.
      IF PRO-DESP.FREQ = "THREE_TIMES_PER_WEEK" THEN DO:
	  H-FREQ = "3XW".
	  TICKS = 0.
	  F-TICK = yes.
	  REPEAT DayCount = 1 TO DaysInMonth:
	      C-DATE = DATE(ProcessMonth,DayCount,ProcessYear).
	      H-WEEK = WEEKDAY(C-DATE).
	      IF H-WEEK = 1 AND PRO-DESP.WKDAY[2] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 2 AND PRO-DESP.WKDAY[3] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 3 AND PRO-DESP.WKDAY[4] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 4 AND PRO-DESP.WKDAY[5] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 5 AND PRO-DESP.WKDAY[6] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 6 AND PRO-DESP.WKDAY[7] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 7 AND PRO-DESP.WKDAY[1] THEN TICKS = TICKS + 1.
	  END.
      END.
      IF PRO-DESP.FREQ = "FOUR_TIMES_PER_WEEK" THEN DO:
	  H-FREQ = "4XW".
	  TICKS = 0.
	  F-TICK = yes.
	  REPEAT DayCount = 1 TO DaysInMonth:
	      C-DATE = DATE(ProcessMonth,DayCount,ProcessYear).
	      H-WEEK = WEEKDAY(C-DATE).
	      IF H-WEEK = 1 AND PRO-DESP.WKDAY[2] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 2 AND PRO-DESP.WKDAY[3] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 3 AND PRO-DESP.WKDAY[4] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 4 AND PRO-DESP.WKDAY[5] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 5 AND PRO-DESP.WKDAY[6] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 6 AND PRO-DESP.WKDAY[7] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 7 AND PRO-DESP.WKDAY[1] THEN TICKS = TICKS + 1.
	  END.
      END.
      IF PRO-DESP.FREQ = "FIVE_TIMES_PER_WEEK" THEN DO:
	  H-FREQ = "5XW".
	  TICKS = 0.
	  F-TICK = yes.
	  REPEAT DayCount = 1 TO DaysInMonth:
	      C-DATE = DATE(ProcessMonth,DayCount,ProcessYear).
	      H-WEEK = WEEKDAY(C-DATE).
	      IF H-WEEK = 1 AND PRO-DESP.WKDAY[2] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 2 AND PRO-DESP.WKDAY[3] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 3 AND PRO-DESP.WKDAY[4] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 4 AND PRO-DESP.WKDAY[5] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 5 AND PRO-DESP.WKDAY[6] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 6 AND PRO-DESP.WKDAY[7] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 7 AND PRO-DESP.WKDAY[1] THEN TICKS = TICKS + 1.
	  END.
      END.
      IF PRO-DESP.FREQ = "SIX_TIMES_PER_WEEK" THEN DO:
	  H-FREQ = "6XW".
	  TICKS = 0.
	  F-TICK = yes.
	  REPEAT DayCount = 1 TO DaysInMonth:
	      C-DATE = DATE(ProcessMonth,DayCount,ProcessYear).
	      H-WEEK = WEEKDAY(C-DATE).
	      IF H-WEEK = 1 AND PRO-DESP.WKDAY[2] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 2 AND PRO-DESP.WKDAY[3] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 3 AND PRO-DESP.WKDAY[4] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 4 AND PRO-DESP.WKDAY[5] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 5 AND PRO-DESP.WKDAY[6] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 6 AND PRO-DESP.WKDAY[7] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 7 AND PRO-DESP.WKDAY[1] THEN TICKS = TICKS + 1.
	  END.
      END.
      IF PRO-DESP.FREQ = "WEEKLY" THEN DO:
	  H-FREQ = "W".
	  TICKS = 0.
	  F-TICK = yes.
	  REPEAT DayCount = 1 TO DaysInMonth:
	      C-DATE = DATE(ProcessMonth,DayCount,ProcessYear).
	      H-WEEK = WEEKDAY(C-DATE).
	      IF H-WEEK = 1 AND PRO-DESP.WKDAY[2] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 2 AND PRO-DESP.WKDAY[3] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 3 AND PRO-DESP.WKDAY[4] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 4 AND PRO-DESP.WKDAY[5] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 5 AND PRO-DESP.WKDAY[6] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 6 AND PRO-DESP.WKDAY[7] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 7 AND PRO-DESP.WKDAY[1] THEN TICKS = TICKS + 1.
	  END.
      END.
      IF PRO-DESP.FREQ = "EVERY_TWO_WEEKS" THEN DO:
	  H-FREQ = "2W".
	  TICKS = 0.
	  F-TICK = yes.
	  IF PRO-DESP.CL-DATE + 14 >= DATE(ProcessMonth,1,ProcessYear) AND
	     PRO-DESP.CL-DATE + 14 <= DATE(ProcessMonth,DaysInMonth,ProcessYear)
	     THEN TICKS = TICKS + 1.
	  IF PRO-DESP.CL-DATE + 28 >= DATE(ProcessMonth,1,ProcessYear) AND
	     PRO-DESP.CL-DATE + 28 <= DATE(ProcessMonth,DaysInMonth,ProcessYear)
	     THEN TICKS = TICKS + 1.
	  IF PRO-DESP.CL-DATE + 42 >= DATE(ProcessMonth,1,ProcessYear) AND
	     PRO-DESP.CL-DATE + 42 <= DATE(ProcessMonth,DaysInMonth,ProcessYear)
	     THEN TICKS = TICKS + 1.
	  IF PRO-DESP.CL-DATE + 56 >= DATE(ProcessMonth,1,ProcessYear) AND
	     PRO-DESP.CL-DATE + 56 <= DATE(ProcessMonth,DaysInMonth,ProcessYear)
	     THEN TICKS = TICKS + 1.
	  IF PRO-DESP.CL-DATE + 70 >= DATE(ProcessMonth,1,ProcessYear) AND
	     PRO-DESP.CL-DATE + 70 <= DATE(ProcessMonth,DaysInMonth,ProcessYear)
	     THEN TICKS = TICKS + 1.
	  IF PRO-DESP.CL-DATE = 01/01/1901 THEN TICKS = 2.
      END.
      IF PRO-DESP.FREQ = "EVERY_THREE_WEEKS" THEN DO:
	  H-FREQ = "3W".
	  TICKS = 0.
	  F-TICK = yes.
	  IF PRO-DESP.CL-DATE + 21 >= DATE(ProcessMonth,1,ProcessYear) AND
	     PRO-DESP.CL-DATE + 21 <= DATE(ProcessMonth,DaysInMonth,ProcessYear)
	     THEN TICKS = TICKS + 1.
	  IF PRO-DESP.CL-DATE + 42 >= DATE(ProcessMonth,1,ProcessYear) AND
	     PRO-DESP.CL-DATE + 42 <= DATE(ProcessMonth,DaysInMonth,ProcessYear)
	     THEN TICKS = TICKS + 1.
	  IF PRO-DESP.CL-DATE + 63 >= DATE(ProcessMonth,1,ProcessYear) AND
	     PRO-DESP.CL-DATE + 63 <= DATE(ProcessMonth,DaysInMonth,ProcessYear)
	     THEN TICKS = TICKS + 1.
	  IF PRO-DESP.CL-DATE = 01/01/1901 THEN TICKS = 1.
      END.
      IF PRO-DESP.FREQ = "EVERY_FOUR_WEEKS" THEN DO:
	  H-FREQ = "4W".
	  TICKS = 0.
	  F-TICK = yes.
	  IF PRO-DESP.CL-DATE + 28 >= DATE(ProcessMonth,1,ProcessYear) AND
	     PRO-DESP.CL-DATE + 28 <= DATE(ProcessMonth,DaysInMonth,ProcessYear)
	     THEN TICKS = TICKS + 1.
	  IF PRO-DESP.CL-DATE + 56 >= DATE(ProcessMonth,1,ProcessYear) AND
	     PRO-DESP.CL-DATE + 56 <= DATE(ProcessMonth,DaysInMonth,ProcessYear)
	     THEN TICKS = TICKS + 1.
	  IF PRO-DESP.CL-DATE + 84 >= DATE(ProcessMonth,1,ProcessYear) AND
	     PRO-DESP.CL-DATE + 84 <= DATE(ProcessMonth,DaysInMonth,ProcessYear)
	     THEN TICKS = TICKS + 1.
	  IF PRO-DESP.CL-DATE = 01/01/1901 THEN TICKS = 1.
      END.

      IF PRO-DESP.FREQ = "EVERY_FIVE_WEEKS" THEN DO:
	  H-FREQ = "5W".
	  TICKS = 0.
	  F-TICK = yes.
	  IF PRO-DESP.CL-DATE + 35 >= DATE(ProcessMonth,1,ProcessYear) AND
	     PRO-DESP.CL-DATE + 35 <= DATE(ProcessMonth,DaysInMonth,ProcessYear)
	     THEN TICKS = TICKS + 1.
	  IF PRO-DESP.CL-DATE + 70 >= DATE(ProcessMonth,1,ProcessYear) AND
	     PRO-DESP.CL-DATE + 70 <= DATE(ProcessMonth,DaysInMonth,ProcessYear)
	     THEN TICKS = TICKS + 1.
	  IF PRO-DESP.CL-DATE = 01/01/1901 THEN TICKS = 1.
      END.
      IF PRO-DESP.FREQ = "EVERY_SIX_WEEKS" THEN DO:
	  H-FREQ = "6W".
	  TICKS = 0.
	  F-TICK = yes.
	  IF PRO-DESP.CL-DATE + 42 >= DATE(ProcessMonth,1,ProcessYear) AND
	     PRO-DESP.CL-DATE + 42 <= DATE(ProcessMonth,DaysInMonth,ProcessYear)
	     THEN TICKS = TICKS + 1.
	  IF PRO-DESP.CL-DATE + 84 >= DATE(ProcessMonth,1,ProcessYear) AND
	     PRO-DESP.CL-DATE + 84 <= DATE(ProcessMonth,DaysInMonth,ProcessYear)
	     THEN TICKS = TICKS + 1.
	  IF PRO-DESP.CL-DATE = 01/01/1901 THEN TICKS = 1.
      END.
      IF PRO-DESP.FREQ = "EVERY_EIGHT_WEEKS" THEN DO:
	  H-FREQ = "8W".
	  TICKS = 0.
	  F-TICK = yes.
	  IF PRO-DESP.CL-DATE + 56 >= DATE(ProcessMonth,1,ProcessYear) AND
	     PRO-DESP.CL-DATE + 56 <= DATE(ProcessMonth,DaysInMonth,ProcessYear)
	     THEN TICKS = TICKS + 1.
	  IF PRO-DESP.CL-DATE + 112 >= DATE(ProcessMonth,1,ProcessYear) AND
	     PRO-DESP.CL-DATE + 112 <= DATE(ProcessMonth,DaysInMonth,ProcessYear)
	     THEN TICKS = TICKS + 1.
	  IF PRO-DESP.CL-DATE = 01/01/1901 THEN TICKS = 1.
      END.
      IF PRO-DESP.FREQ = "MONTHLY" THEN DO:
	  H-FREQ = "M".
	  TICKS = 1.
	  F-TICK = yes.
      END.
      IF PRO-DESP.FREQ = "QUARTERLY" AND PRO-DESP.MTH[ProcessMonth] THEN DO:
	  H-FREQ = "Q".
	  TICKS = 1.
	  F-TICK = yes.
      END.
      IF PRO-DESP.FREQ = "TWO_TIMES_PER_MONTH" THEN DO:
	  H-FREQ = "2XM".
	  TICKS = 2.
	  F-TICK = yes.
      END.
      IF PRO-DESP.FREQ = "ANNUAL" AND PRO-DESP.MTH[ProcessMonth] THEN DO:
	  H-FREQ = "A".
	  TICKS = 1.
	  F-TICK = yes.
      END.
      IF PRO-DESP.FREQ = "TWO_TIMES_PER_YEAR" AND PRO-DESP.MTH[ProcessMonth] THEN DO:
	  H-FREQ = "2XYR".
	  TICKS = 1.
	  F-TICK = yes.
      END.
      IF PRO-DESP.FREQ = "THREE_TIMES_PER_YEAR" AND PRO-DESP.MTH[ProcessMonth]
	THEN DO:
	  H-FREQ = "3XYR".
	  TICKS = 1.
	  F-TICK = yes.
      END.
      IF PRO-DESP.FREQ = "FOUR_TIMES_PER_YEAR" AND PRO-DESP.MTH[ProcessMonth]
	THEN DO:
	  H-FREQ = "4XYR".
	  TICKS = 1.
	  F-TICK = yes.
      END.
      IF PRO-DESP.FREQ = "FIVE_TIMES_PER_YEAR" AND PRO-DESP.MTH[ProcessMonth]
	THEN DO:
	  H-FREQ = "5XYR".
	  TICKS = 1.
	  F-TICK = yes.
      END.
      IF PRO-DESP.FREQ = "SIX_TIMES_PER_YEAR" AND PRO-DESP.MTH[ProcessMonth]
	THEN DO:
	  H-FREQ = "6XYR".
	  TICKS = 1.
	  F-TICK = yes.
      END.
      IF PRO-DESP.FREQ = "SEVEN_TIMES_PER_YEAR" AND PRO-DESP.MTH[ProcessMonth]
	THEN DO:
	  H-FREQ = "7XYR".
	  TICKS = 1.
	  F-TICK = yes.
      END.
      IF PRO-DESP.FREQ = "EIGHT_TIMES_PER_YEAR" AND PRO-DESP.MTH[ProcessMonth]
	THEN DO:
	  H-FREQ = "8XYR".
	  TICKS = 1.
	  F-TICK = yes.
      END.
      IF PRO-DESP.FREQ = "NINE_TIMES_PER_YEAR" AND PRO-DESP.MTH[ProcessMonth]
	THEN DO:
	  H-FREQ = "9XYR".
	  TICKS = 1.
	  F-TICK = yes.
      END.
      IF PRO-DESP.FREQ = "TEN_TIMES_PER_YEAR" AND PRO-DESP.MTH[ProcessMonth]
	THEN DO:
	  H-FREQ = "10XYR".
	  TICKS = 1.
	  F-TICK = yes.
      END.
      IF PRO-DESP.FREQ = "ELEVEN_TIMES_PER_YEAR" AND PRO-DESP.MTH[ProcessMonth]
	THEN DO:
	  H-FREQ = "11XYR".
	  TICKS = 1.
	  F-TICK = yes.
      END.
      IF PRO-DESP.FREQ = "EVERY_TWO_YEARS" THEN
	  IF (ProcessYear - YEAR(PRO-DESP.CL-DATE) = 2) AND PRO-DESP.MTH[ProcessMonth] THEN DO:
	      H-FREQ = "1X2YR".
	      TICKS = 1.
	      F-TICK = yes.
	  END.
      IF PRO-DESP.FREQ = "EVERY_THREE_YEARS" THEN
	  IF (ProcessYear - YEAR(PRO-DESP.CL-DATE) = 3) AND PRO-DESP.MTH[ProcessMonth] THEN DO:
	      H-FREQ = "1X3YR".
	      TICKS = 1.
	      F-TICK = yes.
	  END.
      IF PRO-DESP.FREQ = "EVERY_FOUR_YEARS" THEN
	  IF (ProcessYear - YEAR(PRO-DESP.CL-DATE) = 4) AND PRO-DESP.MTH[ProcessMonth] THEN DO:
	      H-FREQ = "1X4YR".
	      TICKS = 1.
	      F-TICK = yes.
	  END.
      IF PRO-DESP.FREQ = "EVERY_FIVE_YEARS" THEN
	  IF (ProcessYear - YEAR(PRO-DESP.CL-DATE) = 5) AND PRO-DESP.MTH[ProcessMonth] THEN DO:
	      H-FREQ = "1X5YR".
	      TICKS = 1.
	      F-TICK = yes.
	  END.
      IF PRO-DESP.FREQ = "EVERY_EIGHTEEN_MONTHS" THEN
	  IF PRO-DESP.CL-DATE + 549 >= DATE(ProcessMonth,1,ProcessYear) AND
	     PRO-DESP.CL-DATE + 549 <= DATE(ProcessMonth,DaysInMonth,ProcessYear)
	     THEN DO:
	       TICKS = 1.
	       H-FREQ = "1X18M".
	       F-TICK = yes.
	  END.
      IF PRO-DESP.FREQ = "SPECIAL_CLEANING" AND PRO-DESP.MTH[ProcessMonth] THEN DO:
	  H-FREQ = "SPCL".
	  TICKS = 1.
	  F-TICK = yes.
      END.
      IF PRO-DESP.FREQ = "ON_CALL" AND PRO-DESP.MTH[ProcessMonth] THEN DO:
	  H-FREQ = "OC".
	  TICKS = 1.
	  F-TICK = yes.
      END.
      IF PRO-DESP.FREQ = "INITIAL_CLEANING" AND PRO-DESP.MTH[ProcessMonth] THEN DO:
	  H-FREQ = "IC".
	  TICKS = 1.
	  F-TICK = yes.
      END.
      IF PRO-DESP.FREQ = "ONE_TIME_CLEANING" AND PRO-DESP.MTH[ProcessMonth] THEN DO:
	  H-FREQ = "1X".
	  TICKS = 1.
	  F-TICK = yes.
      END.
       
      IF F-TICK THEN DO:
         REPEAT DayCount = 1 TO TICKS:
            FIND FIRST TICKET WHERE 
                          TICKET.COMP# = ACCT-RCV.COMP# AND
			      TICKET.DIV# = ACCT-RCV.DIV# AND
			      TICKET.CUST# = ACCT-RCV.CUST# AND
			      TICKET.PROPSL# = PRO-DESP.PROPSL# AND
			      TICKET.ITEM# = PRO-DESP.ITEM# AND
			      TICKET.MONTH# = ProcessMonth AND
			      TICKET.T-INDX = DayCount NO-ERROR.
            IF AVAILABLE TICKET AND NOT TestMode THEN DO:
	        NEXT.
            END.
      
            IF DayCount = F-INDEX OR TestMode THEN DO:
               IF NOT LaserPrint THEN DO:
                  IF TestMode THEN OUTPUT TO "c:\psg-work\monthlyadd.txt".
                  ELSE OUTPUT TO PRINTER PAGE-SIZE 0. 
                  DISPLAY SPACE(74) 
                          H-FREQ SKIP(1) SPACE(44)
	                   STRING(PRO-DESP.COMP#, ">>") + "-" +
            	            TRIM(STRING(PRO-DESP.DIV#, ">>")) + "-" +
	                   TRIM(STRING(PRO-DESP.CUST#, ">>>>>>>>>>")) + "-" +
	                   TRIM(STRING(PRO-DESP.PROPSL#, ">>>>>>>>>>")) + "-" +
	                   TRIM(STRING(PRO-DESP.ITEM#, ">>>>")) + "-" +
	                   TRIM(STRING(ProcessMonth, ">>")) + "-" +
	                   TRIM(STRING(DayCount, ">>")) FORMAT "X(35)" SKIP(1) SPACE(20)
	                   PROPSL.L-NAME SPACE(1)
	                   PROPSL.LADDR01 SKIP(0) SPACE(20)
	                   PROPSL.LADDR02 SPACE(1)
	                   PROPSL.LADDR03 SKIP(0)
	                   PRO-DESP.DESC01 SKIP(0)
	                   PRO-DESP.DESC02 SKIP(0)
	                   PRO-DESP.DESC03 SKIP(0)
	                   PRO-DESP.DESC04 SKIP(0)
	                   PRO-DESP.DESC05 SKIP(0)
	                   PRO-DESP.DESC06 SKIP(0)
	                   PRO-DESP.DESC07 SKIP(0)
	                   PRO-DESP.DESC08 SKIP(0)
	                   PRO-DESP.DESC09 SKIP(0)
	                   PRO-DESP.DESC10 SKIP(1)
	                   PRO-DESP.SPC-INTR SKIP(4) WITH FRAME P NO-BOX NO-LABELS.
	        END. /*NOT LaserPrint */ 
	        ELSE DO:
	           CoProposal = 
                    STRING(PRO-DESP.COMP#, ">>") + "-" +
    	             TRIM(STRING(PRO-DESP.DIV#, ">>")) + "-" + 
   	             TRIM(STRING(PRO-DESP.CUST#, ">>>>>>>>>>")) + "-" +
	             TRIM(STRING(PRO-DESP.PROPSL#, ">>>>>>>>>>")) + "-" +
	             TRIM(STRING(PRO-DESP.ITEM#, ">>>>")) + "-" +
	             TRIM(STRING(ProcessMonth, ">>")) + "-" +
	             /*trim(string(gweek, ">>")) + "-" +*/
	             TRIM(STRING(DayCount, ">>")).
	           CREATE ttDocXPrint.
                  ASSIGN 
                     ttDocXPrint.Idx              = ttDocXSequence
                     ttDocXPrint.Week             = h-Freq
                     ttDocXPrint.CoProposal       = CoProposal
                     ttDocXPrint.Location         = Propsl.L-Name + " " + 
                                                    Propsl.Laddr01 + " " +
                                                    Propsl.Laddr02 + " " +
                                                    propsl.laddr03
                     ttDocXPrint.Note1            = PRO-DESP.DESC01
                     ttDocXPrint.Note2            = PRO-DESP.DESC02
                     ttDocXPrint.Note3            = PRO-DESP.DESC03
                     ttDocXPrint.Note4            = PRO-DESP.DESC04
                     ttDocXPrint.Note5            = PRO-DESP.DESC05
                     ttDocXPrint.Note6            = PRO-DESP.DESC06
                     ttDocXPrint.Note7            = PRO-DESP.DESC07
                     ttDocXPrint.Note8            = PRO-DESP.DESC08
                     ttDocXPrint.Note9            = PRO-DESP.DESC09
                     ttDocXPrint.Note10           = PRO-DESP.DESC10
                     ttDocXPrint.STartEndCodEquip =  "  Equip: " +
                                                     PRO-DESP.EquipmentRequired
                     ttDocXPrint.SpcIntr          =  PRO-DESP.SPC-INTR
                     ttDocXPrint.Name             = PROPSL.ADDR4
                     ttDocXPrint.Address          = PROPSL.ADDR1
                     ttDocXPrint.Address2         = PROPSL.ADDR2
                     ttDocXPrint.City             = PROPSL.ADDR3
                     ttDocXPrint.Phone            = PROPSL.TELE
                     ttDocXPrint.EMail            = PROPSL.email1
                     ttDocXPrint.Price            = PRO-DESP.AMT
                     ttDocXPrint.Weeks            = IF PRO-DESP.wks[1]   THEN ttDocXPrint.Weeks + "1 "  ELSE ttDocXPrint.Weeks
                     ttDocXPrint.Weeks            = IF PRO-DESP.wks[2]   THEN ttDocXPrint.Weeks + "2 "  ELSE ttDocXPrint.Weeks
                     ttDocXPrint.Weeks            = IF PRO-DESP.wks[3]   THEN ttDocXPrint.Weeks + "3 "  ELSE ttDocXPrint.Weeks
                     ttDocXPrint.Weeks            = IF PRO-DESP.wks[4]   THEN ttDocXPrint.Weeks + "4 "  ELSE ttDocXPrint.Weeks
                     ttDocXPrint.Weeks            = IF PRO-DESP.wks[5]   THEN ttDocXPrint.Weeks + "5 "  ELSE ttDocXPrint.Weeks
                     ttDocXPrint.Days             = IF PRO-DESP.WKDAY[1] THEN ttDocXPrint.Days  + "Sa " ELSE ttDocxPrint.Days
                     ttDocXPrint.Days             = IF PRO-DESP.WKDAY[2] THEN ttDocXPrint.Days  + "Su " ELSE ttDocxPrint.Days
                     ttDocXPrint.Days             = IF PRO-DESP.WKDAY[3] THEN ttDocXPrint.Days  + "Mo " ELSE ttDocxPrint.Days
                     ttDocXPrint.Days             = IF PRO-DESP.WKDAY[4] THEN ttDocXPrint.Days  + "Tu " ELSE ttDocxPrint.Days
                     ttDocXPrint.Days             = IF PRO-DESP.WKDAY[5] THEN ttDocXPrint.Days  + "We " ELSE ttDocxPrint.Days
                     ttDocXPrint.Days             = IF PRO-DESP.WKDAY[6] THEN ttDocXPrint.Days  + "Th " ELSE ttDocxPrint.Days
                     ttDocXPrint.Days             = IF PRO-DESP.WKDAY[7] THEN ttDocXPrint.Days  + "Fr " ELSE ttDocxPrint.Days
                     ttDocXPrint.wScheduled       = IF PRO-DESP.wks[1]      THEN Yes 
                                                    ELSE IF PRO-DESP.wks[2] THEN YES
                                                    ELSE IF PRO-DESP.wks[3] THEN YES
                                                    ELSE IF PRO-DESP.wks[4] THEN YES
                                                    ELSE IF PRO-DESP.wks[5] THEN YES
                                                    ELSE No
                     ttDocXPrint.dScheduled       = IF PRO-DESP.WKDAY[1]       THEN YES
                                                    ELSE IF PRO-DESP.WKDAY[2]  THEN YES
                                                    ELSE IF PRO-DESP.WKDAY[3]  THEN YES
                                                    ELSE IF PRO-DESP.WKDAY[4]  THEN YES
                                                    ELSE IF PRO-DESP.WKDAY[5]  THEN YES
                                                    ELSE IF PRO-DESP.WKDAY[6]  THEN YES
                                                    ELSE IF PRO-DESP.WKDAY[7]  THEN YES                     
                                                    ELSE No
                  .
                      ttDocXSequence = ttDocXSequence + 1.    
                          
                 IF NOT TestMode THEN RUN docx_load("p:\template\TicketsMonthly1Page.dfw").
                 IF TestMode     THEN RUN docx_load("c:\psg-prog\template\TicketsMonthly1Page.dfw").
    	          FOR EACH ttDocXPrint BY Idx:
      	            run docx_setClipboardValue("Ticket",string(1) + "Week", ttDocXPrint.Week).
                   run docx_setClipboardValue("Ticket",string(1) + "ProposalNumber", ttDocXPrint.CoProposal).  
                   run docx_setClipboardValue("Ticket",string(1) + "Location", ttDocXPrint.Location).
                   run docx_setClipboardValue("Ticket",string(1) + "Note1", ttDocXPrint.Note1).
                   run docx_setClipboardValue("Ticket",string(1) + "Note2", ttDocXPrint.Note2).
                   run docx_setClipboardValue("Ticket",string(1) + "Note3", ttDocXPrint.Note3).
                   run docx_setClipboardValue("Ticket",string(1) + "Note4", ttDocXPrint.Note4).
                   run docx_setClipboardValue("Ticket",string(1) + "Note5", ttDocXPrint.Note5).
                   run docx_setClipboardValue("Ticket",string(1) + "Note6", ttDocXPrint.Note6).
                   run docx_setClipboardValue("Ticket",string(1) + "Note7", ttDocXPrint.Note7).
                   run docx_setClipboardValue("Ticket",string(1) + "Note8", ttDocXPrint.Note8).
                   run docx_setClipboardValue("Ticket",string(1) + "Note9", ttDocXPrint.Note9).
                   run docx_setClipboardValue("Ticket",string(1) + "Note10", ttDocXPrint.Note10).
                   run docx_setClipboardValue("Ticket",string(1) + "StartEndCodEquip", ttDocXPrint.StartEndCodEquip).
                   run docx_setClipboardValue("Ticket",string(1) + "SpcIntr", ttDocXPrint.SpcIntr).
               
    	            run docx_setClipboardValue("Ticket",string(2) + "Week", ttDocXPrint.Week).
                   run docx_setClipboardValue("Ticket",string(2) + "ProposalNumber", ttDocXPrint.CoProposal).  
                   run docx_setClipboardValue("Ticket",string(2) + "Location", ttDocXPrint.Location).
                   run docx_setClipboardValue("Ticket",string(2) + "Note1", ttDocXPrint.Note1).
                   run docx_setClipboardValue("Ticket",string(2) + "Note2", ttDocXPrint.Note2).
                   run docx_setClipboardValue("Ticket",string(2) + "Note3", ttDocXPrint.Note3).
                   run docx_setClipboardValue("Ticket",string(2) + "Note4", ttDocXPrint.Note4).
                   run docx_setClipboardValue("Ticket",string(2) + "Note5", ttDocXPrint.Note5).
                   run docx_setClipboardValue("Ticket",string(2) + "Note6", ttDocXPrint.Note6).
                   run docx_setClipboardValue("Ticket",string(2) + "Note7", ttDocXPrint.Note7).
                   run docx_setClipboardValue("Ticket",string(2) + "Note8", ttDocXPrint.Note8).
                   run docx_setClipboardValue("Ticket",string(2) + "Note9", ttDocXPrint.Note9).
                   run docx_setClipboardValue("Ticket",string(2) + "Note10", ttDocXPrint.Note10).
                   run docx_setClipboardValue("Ticket",string(2) + "StartEndCodEquip", ttDocXPrint.StartEndCodEquip).
                   run docx_setClipboardValue("Ticket",string(2) + "SpcIntr", ttDocXPrint.SpcIntr).               
                   run docx_paste("Ticket").
               
      	            run docx_setClipboardValue("Ticket",string(1) + "Week", ttDocXPrint.Week).
                   run docx_setClipboardValue("Ticket",string(1) + "ProposalNumber", ttDocXPrint.CoProposal).  
                   run docx_setClipboardValue("Ticket",string(1) + "Location", ttDocXPrint.Location).
                   run docx_setClipboardValue("Ticket",string(1) + "Note1", ttDocXPrint.Name +
                                                                            "                                       " +
                                                                            STRING(ttDocXPrint.Price,"$ZZ,ZZ9.99")   + 
                                                                            "      Weeks: " + ttDocXPrint.Weeks      +
                                                                            "      Days: " + ttDocXPrint.Days).
                   run docx_setClipboardValue("Ticket",string(1) + "Note2", ttDocXPrint.Address).
                   run docx_setClipboardValue("Ticket",string(1) + "Note3", ttDocXPrint.City).
                   run docx_setClipboardValue("Ticket",string(1) + "Note4", ttDocXPrint.Phone).
                   run docx_setClipboardValue("Ticket",string(1) + "Note5", ttDocXPrint.EMail).
                   run docx_setClipboardValue("Ticket",string(1) + "Note6", 
                    "____________________________________________________________________________________________________").
                   run docx_setClipboardValue("Ticket",string(1) + "Note7", 
                   "_____________________________________________________________________________________________________").
                   run docx_setClipboardValue("Ticket",string(1) + "Note8", 
                   "_____________________________________________________________________________________________________").
                   run docx_setClipboardValue("Ticket",string(1) + "Note9", 
                   "_____________________________________________________________________________________________________").
                   run docx_setClipboardValue("Ticket",string(1) + "Note10", 
                   "_____________________________________________________________________________________________________").
                   run docx_setClipboardValue("Ticket",string(1) + "StartEndCodEquip", 
                   "_____________________________________________________________________________________________________").
                   run docx_setClipboardValue("Ticket",string(1) + "SpcIntr", 
                   "_____________________________________________________________________________________________________").
                   
    	            run docx_setClipboardValue("Ticket",string(2) + "Week", ttDocXPrint.Week).
                   run docx_setClipboardValue("Ticket",string(2) + "ProposalNumber", ttDocXPrint.CoProposal).  
                   run docx_setClipboardValue("Ticket",string(2) + "Location", ttDocXPrint.Location).
                   run docx_setClipboardValue("Ticket",string(2) + "Note1", ttDocXPrint.Note1).
                   run docx_setClipboardValue("Ticket",string(2) + "Note2", ttDocXPrint.Note2).
                   run docx_setClipboardValue("Ticket",string(2) + "Note3", ttDocXPrint.Note3).
                   run docx_setClipboardValue("Ticket",string(2) + "Note4", ttDocXPrint.Note4).
                   run docx_setClipboardValue("Ticket",string(2) + "Note5", ttDocXPrint.Note5).
                   run docx_setClipboardValue("Ticket",string(2) + "Note6", ttDocXPrint.Note6).
                   run docx_setClipboardValue("Ticket",string(2) + "Note7", ttDocXPrint.Note7).
                   run docx_setClipboardValue("Ticket",string(2) + "Note8", ttDocXPrint.Note8).
                   run docx_setClipboardValue("Ticket",string(2) + "Note9", ttDocXPrint.Note9).
                   run docx_setClipboardValue("Ticket",string(2) + "Note10", ttDocXPrint.Note10).
                   run docx_setClipboardValue("Ticket",string(2) + "StartEndCodEquip", ttDocXPrint.StartEndCodEquip).
                   run docx_setClipboardValue("Ticket",string(2) + "SpcIntr", ttDocXPrint.SpcIntr).               
                   run docx_paste("Ticket").   
                   
                   FileName = os_getNextFile ( "c:\LaserTickets\MonthlyTicketAdd" + 
                                               STRING(YEAR(TODAY))  + 
                                               STRING(MONTH(TODAY)) +
                                               STRING(DAY(TODAY)) +
                                               ".docx" ). 
                   run docx_save(FileName).
                   Cmd = "start winword.exe /t " + FileName.
                   OS-command silent VALUE(Cmd).       
                END. /* FOR EACH ttdocxprint */
	      END. /*LaserPrint */
	      CREATE TICKET.
	      ASSIGN TICKET.COMP# = ACCT-RCV.COMP#
	             TICKET.DIV# = ACCT-RCV.DIV#
	             TICKET.CUST# = ACCT-RCV.CUST#
	             TICKET.PROPSL# = PRO-DESP.PROPSL#
	             TICKET.ITEM# = PRO-DESP.ITEM#
	             TICKET.MONTH# = ProcessMonth
	             TICKET.T-INDX = DayCount
	             TICKET.DATE-PRT = TODAY
	             TICKET.DL-BUD = PRO-DESP.DL
	             TICKET.DL-BAL = PRO-DESP.DL
	             TICKET.WK-DL-BAL = PRO-DESP.DL
	             TICKET.WK-DL-BUD = PRO-DESP.DL
	             TICKET.PRT = "Y"
	             TICKET.FREQ = PRO-DESP.FREQ
	             TICKET.T-STAT = "P".
	      IF PRO-DESP.WHCH-AMT = 1 THEN DO:
		  TICKET.TOT-AMT = PRO-DESP.AMT.
		  TICKET.WK-START = PRO-DESP.AMT.
		  TICKET.TOT-AMT-REM = PRO-DESP.AMT.
	      END.
	      IF PRO-DESP.WHCH-AMT = 2 THEN DO:
		  TICKET.TOT-AMT = AMT2 * AMT2-MUL.
		  TICKET.WK-START = AMT2 * AMT2-MUL.
		  TICKET.TOT-AMT-REM = AMT2 * AMT2-MUL.
	      END.
	      RELEASE TICKET.
	      create cl-date.
		cl-date.cl-date = 01/01/9999.
		cl-date.comp# = acct-rcv.comp#.
		cl-date.cust# = acct-rcv.cust#.
		cl-date.date-ret = 01/01/9999.
		cl-date.div# = acct-rcv.div#.
		cl-date.freq = pro-desp.freq.
		cl-date.item# = pro-desp.item#.
		cl-date.month# = ProcessMonth.
		cl-date.propsl# = pro-desp.propsl#.
		cl-date.route# = pro-desp.route#.
		cl-date.sub# = pro-desp.sub#.
		cl-date.t-indx = DayCount.
	      release cl-date.
	    END.
	  END.
      END.
