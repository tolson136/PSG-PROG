DEFINE VARIABLE NOTHING AS CHAR FORMAT "X(80)".
DEFINE VARIABLE ANS AS LOGICAL LABEL
    "IS THIS INFORMATION CORRECT ?".
DEFINE SHARED VARIABLE XOPR AS CHAR FORMAT "XXX".
DEFINE SHARED VARIABLE CHOICE AS CHAR FORMAT "X".
DEFINE SHARED VARIABLE XCOM AS INTEGER FORMAT "ZZ".
DEFINE SHARED VARIABLE XDIV AS INTEGER FORMAT "ZZ".
DEFINE VARIABLE XCST AS DECIMAL FORMAT "ZZZZZZZZZZ".
DEFINE VARIABLE XCST-N AS CHAR FORMAT "X(25)".
DEFINE SHARED VARIABLE XCOM-N AS CHAR FORMAT "X(30)".
DEFINE SHARED VARIABLE XDIV-N AS CHAR FORMAT "X(30)".
DEFINE VARIABLE XCTR AS INTEGER FORMAT "99".
DEFINE VARIABLE CTRX AS INTEGER FORMAT "99".
DEFINE VARIABLE ASTER AS CHAR FORMAT "XX".
DEFINE VARIABLE BASTER AS CHAR FORMAT "XX".
DEFINE SHARED VARIABLE P-PERIOD AS CHAR FORMAT "XXXXXX"
    LABEL "POSTING PERIOD             ".
DEFINE SHARED VARIABLE P-DATE AS DATE FORMAT "99/99/9999"
    LABEL "POSTING DATE               ".
DEFINE SHARED VARIABLE T-DEBITS AS DECIMAL FORMAT "$->>>,>>>,>>>.99"
    LABEL "COMPARISON TOTAL - DEBITS  ".
DEFINE SHARED VARIABLE T-CREDITS AS DECIMAL FORMAT "$->>>,>>>,>>>.99"
    LABEL "COMPARISON TOTAL - CREDITS ".
DEFINE SHARED VARIABLE PC-RECPT AS LOGICAL
    LABEL "POST CASH RECEIPTS         ".
DEFINE WORKFILE WK1 LIKE TRANFILE.
DEFINE VARIABLE PS-CUST AS CHAR FORMAT "XXXXXXXXXX".
DEFINE VARIABLE PS-AMT AS CHAR FORMAT "X(16)".
DEFINE VARIABLE PS-TYPE AS CHAR FORMAT "X(12)".
DEFINE VARIABLE PS-DBCR AS CHAR FORMAT "XXXXX".
DEFINE VARIABLE PS-SLS AS CHAR FORMAT "XXX".
DEFINE VARIABLE TOT-DB AS DECIMAL FORMAT "$->>>,>>>,>>>.99".
DEFINE VARIABLE TOT-CR AS DECIMAL FORMAT "$->>>,>>>,>>>.99".
DEFINE VARIABLE HOLD-DB AS DECIMAL FORMAT "$->>>,>>>,>>>.99".
DEFINE VARIABLE HOLD-CR AS DECIMAL FORMAT "$->>>,>>>,>>>.99".
DEFINE VARIABLE HOLD-TP AS CHAR FORMAT "X".
DEFINE VARIABLE HOLD-SLS AS INTEGER FORMAT "ZZZ".
DEFINE VARIABLE HOLD-TEST AS CHAR FORMAT "X".
DEFINE VARIABLE HOLD-CUST AS DECIMAL FORMAT "ZZZZZZZZZZ".
DEFINE VARIABLE HOLD-AMT AS DECIMAL FORMAT "$->>>,>>>,>>>.99".
DEFINE VARIABLE HOLD-INV AS DECIMAL FORMAT "ZZZZZZZZZZ".
IF (USERID = "OPERATIONS") OR (USERID = "LANDMARK") OR (USERID = "GARCIA")
THEN DO:
    MESSAGE "YOU ARE NOT AUTHORIZED TO RUN THIS PROCEDURE".
    RETURN.
END.
UPDATE XCTR = 13.
UPDATE CTRX = 13.
UPDATE ASTER = "**".
UPDATE BASTER = "  ".
UPDATE NOTHING =
"                                                                                ".
REPEAT:
CREATE WK1.
UPDATE WK1.T-OPR = XOPR.
UPDATE WK1.COMP# = XCOM.
UPDATE WK1.DIV# = XDIV.
DISPLAY
" ACCOUNTS RECEIVABLE         P O S T I N G    S C R E E N      DATE:" TODAY
FORMAT "99/99/9999" SKIP(1) WITH FRAME POST-A.
DISPLAY
	WK1.COMP# LABEL "COMPANY NUMBER" SPACE(18)
	WK1.DIV# LABEL "DIVISION NUMBER" SKIP(0)
	XCOM-N LABEL "CMP" SPACE(1)
	XDIV-N LABEL "DIV" SPACE(1)
	WK1.T-OPR LABEL "OPR" SKIP(0) WITH FRAME POST-A.
DISPLAY
"================================================================================"
SKIP(0) WITH FRAME POST-A.
    PROMPT-FOR WK1.CUST# LABEL "ACCOUNT NUMBER"
			  WITH FRAME POST-A SIDE-LABELS NO-BOX.
    XCST = INPUT WK1.CUST#.
    FIND FIRST ACCT-RCV WHERE ACCT-RCV.COMP# = XCOM AND ACCT-RCV.DIV# = XDIV
			AND ACCT-RCV.CUST# = XCST AND ACCT-RCV.C-STATUS <> "I"
			NO-ERROR.
    IF NOT AVAILABLE ACCT-RCV THEN DO:
	MESSAGE "THIS CUSTOMER DOES NOT EXIST OR IS INACTIVE".
	NEXT.
    END.
    IF LASTKEY = KEYCODE("F4") THEN LEAVE.
    PUT SCREEN ROW 9 COLUMN 65 "            ".
    PUT SCREEN ROW 22 COLUMN 1
    "                                                                        ".
    DISPLAY SPACE(13) C-NAME LABEL "ACCOUNT NAME" SKIP(0) WITH FRAME POST-A.
    UPDATE XCST-N = C-NAME.
    UPDATE WK1.TR-STAT = "A".
    UPDATE WK1.T-DATE = P-DATE.
    UPDATE WK1.PERIOD = P-PERIOD.
    UPDATE WK1.T-TYPE = "A".
    UPDATE WK1.AGE = "1".
    UPDATE WK1.T-AMT = 0.00.
    UPDATE WK1.COMMIS = 0.00.
    UPDATE WK1.SUB-CON = 0.00.
    UPDATE WK1.SLS# = ACCT-RCV.SLS#.
    UPDATE WK1.REC# = 0.
    DISPLAY WK1.REC# SKIP(0) WITH FRAME POST-A NO-BOX NO-LABELS.
    DISPLAY WK1.REFER LABEL "REFERENCE" SPACE(1)
	    WK1.INV-NO LABEL "INVOICE" SPACE(1)
	    WK1.T-AMT LABEL "AMOUNT" SPACE(1)
	    WK1.T-TYPE LABEL "TYPE" SKIP(0)
	    WK1.CHECK# LABEL "CHECK #" SPACE(1)
	    WK1.SLS# LABEL "SLS#" SPACE(1)
	    WK1.T-DATE LABEL "DATE" SPACE(1)
	    WK1.TR-STAT LABEL "STATUS" SPACE(1)
	    WK1.PERIOD LABEL "PERIOD" SPACE(1)
	    WK1.AGE LABEL "AGE" SKIP(0)
	    WK1.COMMIS LABEL "COMM$" SPACE(1)
	    WK1.SUB-CON LABEL "SUB$" SPACE(1)
	    WK1.SUB# SPACE(1)
	    WK1.ROUTE# SKIP(0) WITH FRAME POST-A.
    PROMPT-FOR WK1.REFER WK1.INV-NO WK1.T-AMT WK1.T-TYPE WITH FRAME POST-A.
    HOLD-CUST = INPUT WK1.CUST#.
    HOLD-INV = INPUT WK1.INV-NO.
    HOLD-AMT = INPUT WK1.T-AMT.
    HOLD-TP = INPUT WK1.T-TYPE.
    UPDATE HOLD-TEST = "Y".
    IF HOLD-TP = "B"
    THEN DO:
     FIND FIRST TRANFILE WHERE TRANFILE.COMP# = XCOM AND
			 TRANFILE.DIV# = XDIV AND
			 TRANFILE.CUST# = HOLD-CUST AND
			 TRANFILE.INV-NO = HOLD-INV AND
			 TRANFILE.T-AMT = HOLD-AMT AND
			 TRANFILE.TR-STAT = "A" AND
			 TRANFILE.T-TYPE = "A" NO-ERROR.
      IF AVAILABLE TRANFILE
      THEN DO:
	UPDATE TRANFILE.TR-STAT = "I".
	RELEASE TRANFILE.
      END.
      ELSE DO:
	UPDATE HOLD-TEST = "N".
	PUT SCREEN COLOR WHITE/RED ROW 22 COLUMN 1
	 "UNABLE TO FIND MATCH, NO UPDATING WILL TAKE PLACE".
      END.
    END.
    IF HOLD-TP = "E"
    THEN DO:
     FIND FIRST TRANFILE WHERE TRANFILE.COMP# = XCOM AND
			 TRANFILE.DIV# = XDIV AND
			 TRANFILE.CUST# = HOLD-CUST AND
			 TRANFILE.T-AMT = HOLD-AMT AND
			 TRANFILE.TR-STAT = "A" AND
			 TRANFILE.T-TYPE = "D" NO-ERROR.
      IF AVAILABLE TRANFILE
      THEN DO:
	UPDATE TRANFILE.TR-STAT = "I".
	RELEASE TRANFILE.
      END.
      ELSE DO:
	UPDATE HOLD-TEST = "N".
	PUT SCREEN COLOR WHITE/RED ROW 22 COLUMN 1
	 "UNABLE TO FIND MATCH, NO UPDATING WILL TAKE PLACE".
      END.
    END.
    IF HOLD-TP = "F"
    THEN DO:
     FIND FIRST TRANFILE WHERE TRANFILE.COMP# = XCOM AND
			 TRANFILE.DIV# = XDIV AND
			 TRANFILE.CUST# = HOLD-CUST AND
			 TRANFILE.T-AMT = HOLD-AMT AND
			 TRANFILE.TR-STAT = "A" AND
			 TRANFILE.T-TYPE = "D" NO-ERROR.
      IF AVAILABLE TRANFILE
      THEN DO:
	UPDATE TRANFILE.TR-STAT = "I".
	RELEASE TRANFILE.
      END.
      ELSE DO:
	UPDATE HOLD-TEST = "N".
	PUT SCREEN COLOR WHITE/RED ROW 22 COLUMN 1
	 "UNABLE TO FIND MATCH, NO UPDATING WILL TAKE PLACE".
      END.
    END.
    IF HOLD-TP = "H"
    THEN DO:
     FIND FIRST TRANFILE WHERE TRANFILE.COMP# = XCOM AND
			 TRANFILE.DIV# = XDIV AND
			 TRANFILE.INV-NO = HOLD-INV AND
			 TRANFILE.CUST# = HOLD-CUST AND
			 TRANFILE.T-AMT = HOLD-AMT AND
			 TRANFILE.TR-STAT = "A" AND
			 TRANFILE.T-TYPE = "A" NO-ERROR.
      IF AVAILABLE TRANFILE
      THEN DO:
	UPDATE TRANFILE.TR-STAT = "I".
	RELEASE TRANFILE.
      END.
      ELSE DO:
	UPDATE HOLD-TEST = "N".
	PUT SCREEN COLOR WHITE/RED ROW 22 COLUMN 1
	 "UNABLE TO FIND MATCH, NO UPDATING WILL TAKE PLACE".
      END.
    END.
    IF HOLD-TP = "I"
    THEN DO:
     FIND FIRST TRANFILE WHERE TRANFILE.COMP# = XCOM AND
			 TRANFILE.DIV# = XDIV AND
			 TRANFILE.INV-NO = HOLD-INV AND
			 TRANFILE.CUST# = HOLD-CUST AND
			 TRANFILE.T-AMT = HOLD-AMT AND
			 TRANFILE.TR-STAT = "A" AND
			 TRANFILE.T-TYPE = "B" NO-ERROR.
      IF AVAILABLE TRANFILE
      THEN DO:
	UPDATE TRANFILE.TR-STAT = "I".
	RELEASE TRANFILE.
      END.
      ELSE DO:
	UPDATE HOLD-TEST = "N".
	PUT SCREEN COLOR WHITE/RED ROW 22 COLUMN 1
	 "UNABLE TO FIND MATCH, NO UPDATING WILL TAKE PLACE".
      END.
    END.
    IF HOLD-TP = "J"
    THEN DO:
     FIND FIRST TRANFILE WHERE TRANFILE.COMP# = XCOM AND
			 TRANFILE.DIV# = XDIV AND
			 TRANFILE.CUST# = HOLD-CUST AND
			 TRANFILE.T-AMT = HOLD-AMT AND
			 TRANFILE.TR-STAT = "A" AND
			 TRANFILE.T-TYPE = "C" NO-ERROR.
      IF AVAILABLE TRANFILE
      THEN DO:
	UPDATE TRANFILE.TR-STAT = "I".
	RELEASE TRANFILE.
      END.
      ELSE DO:
	UPDATE HOLD-TEST = "N".
	PUT SCREEN COLOR WHITE/RED ROW 22 COLUMN 1
	 "UNABLE TO FIND MATCH, NO UPDATING WILL TAKE PLACE".
      END.
    END.
    IF HOLD-TP = "K"
    THEN DO:
     FIND FIRST TRANFILE WHERE TRANFILE.COMP# = XCOM AND
			 TRANFILE.DIV# = XDIV AND
			 TRANFILE.INV-NO = HOLD-INV AND
			 TRANFILE.CUST# = HOLD-CUST AND
			 TRANFILE.T-AMT = HOLD-AMT AND
			 TRANFILE.TR-STAT = "A" AND
			 TRANFILE.T-TYPE = "A" NO-ERROR.
      IF AVAILABLE TRANFILE
      THEN DO:
	UPDATE TRANFILE.TR-STAT = "I".
	RELEASE TRANFILE.
      END.
      ELSE DO:
	UPDATE HOLD-TEST = "N".
	PUT SCREEN COLOR WHITE/RED ROW 22 COLUMN 1
	 "UNABLE TO FIND MATCH, NO UPDATING WILL TAKE PLACE".
      END.
    END.
    IF HOLD-TP = "L"
    THEN DO:
     FIND FIRST TRANFILE WHERE TRANFILE.COMP# = XCOM AND
			 TRANFILE.DIV# = XDIV AND
			 TRANFILE.INV-NO = HOLD-INV AND
			 TRANFILE.CUST# = HOLD-CUST AND
			 TRANFILE.T-AMT >= HOLD-AMT AND
			 TRANFILE.TR-STAT = "A" AND
			 TRANFILE.T-TYPE = "A" NO-ERROR.
      IF AVAILABLE TRANFILE
      THEN DO:
	UPDATE TRANFILE.T-AMT = TRANFILE.T-AMT - HOLD-AMT.
	IF TRANFILE.T-AMT = 0.0 THEN UPDATE TRANFILE.TR-STAT = "I".
	RELEASE TRANFILE.
      END.
      ELSE DO:
	UPDATE HOLD-TEST = "N".
	PUT SCREEN COLOR WHITE/RED ROW 22 COLUMN 1
	 "UNABLE TO FIND MATCH, NO UPDATING WILL TAKE PLACE".
      END.
    END.
    IF HOLD-TP = "O" OR HOLD-TP = "P"
    THEN DO:
     FIND FIRST TRANFILE WHERE TRANFILE.COMP# = XCOM AND
			 TRANFILE.DIV# = XDIV AND
			 TRANFILE.CUST# = HOLD-CUST AND
			 TRANFILE.T-AMT = HOLD-AMT AND
			 TRANFILE.TR-STAT = "A" AND
			 TRANFILE.T-TYPE = "N" NO-ERROR.
      IF AVAILABLE TRANFILE
      THEN DO:
	UPDATE TRANFILE.TR-STAT = "I".
	RELEASE TRANFILE.
      END.
      ELSE DO:
	UPDATE HOLD-TEST = "N".
	PUT SCREEN COLOR WHITE/RED ROW 22 COLUMN 1
	 "UNABLE TO FIND MATCH, NO UPDATING WILL TAKE PLACE".
      END.
    END.
    IF HOLD-TP = "M"
     THEN DO:
      FIND FIRST TRANFILE WHERE TRANFILE.COMP# = XCOM AND
				TRANFILE.DIV# = XDIV AND
				TRANFILE.INV-NO = HOLD-INV AND
				TRANFILE.CUST# = HOLD-CUST AND
				TRANFILE.T-AMT = HOLD-AMT AND
				TRANFILE.TR-STAT = "I" AND
				TRANFILE.T-TYPE = "A" NO-ERROR.
      IF AVAILABLE TRANFILE
       THEN DO:
	FIND FIRST TRANFILE WHERE TRANFILE.COMP# = XCOM AND
				  TRANFILE.DIV# = XDIV AND
				  TRANFILE.INV-NO = HOLD-INV AND
				  TRANFILE.CUST# = HOLD-CUST AND
				  TRANFILE.T-AMT = HOLD-AMT AND
				  TRANFILE.TR-STAT = "I" AND
				  TRANFILE.T-TYPE = "B" NO-ERROR.
	IF AVAILABLE TRANFILE
	 THEN DO:
	  DELETE TRANFILE.
	  FIND FIRST TRANFILE WHERE TRANFILE.COMP# = XCOM AND
				    TRANFILE.DIV# = XDIV AND
				    TRANFILE.INV-NO = HOLD-INV AND
				    TRANFILE.CUST# = HOLD-CUST AND
				    TRANFILE.T-AMT = HOLD-AMT AND
				    TRANFILE.TR-STAT = "I" AND
				    TRANFILE.T-TYPE = "A".
	  UPDATE TRANFILE.TR-STAT = "A".
	  RELEASE TRANFILE.
	 END.
	ELSE DO:
	 UPDATE HOLD-TEST = "N".
	 PUT SCREEN COLOR WHITE/RED ROW 22 COLUMN 1
	 "UNABLE TO FIND MATCH, NO UPDATING WILL TAKE PLACE".
	END.
	END.
       ELSE DO:
	UPDATE HOLD-TEST = "N".
	PUT SCREEN COLOR WHITE/RED ROW 22 COLUMN 1
	"UNABLE TO FIND MATCH, NO UPDATING WILL TAKE PLACE".
       END.
      END.
    IF HOLD-TEST = "Y"
    THEN DO:
    IF HOLD-TP = "A" THEN
	PUT SCREEN ROW 9 COLUMN 65 COLOR MA "INVOICE     ".
    IF HOLD-TP = "B" THEN
	PUT SCREEN ROW 9 COLUMN 65 COLOR MA "CREDIT      ".
    IF HOLD-TP = "C" THEN
	PUT SCREEN ROW 9 COLUMN 65 COLOR MA "CR MEMO     ".
    IF HOLD-TP = "D" THEN
	PUT SCREEN ROW 9 COLUMN 65 COLOR MA "SRVC CHG    ".
    IF HOLD-TP = "E" THEN
	PUT SCREEN ROW 9 COLUMN 65 COLOR MA "REV SRVC CHG".
    IF HOLD-TP = "F" THEN
	PUT SCREEN ROW 9 COLUMN 65 COLOR MA "SRVC CHG PAY".
    IF HOLD-TP = "G" THEN
	PUT SCREEN ROW 9 COLUMN 65 COLOR MA "CASH SALE   ".
    IF HOLD-TP = "H" THEN
	PUT SCREEN ROW 9 COLUMN 65 COLOR MA "REV INVOICE ".
    IF HOLD-TP = "I" THEN
	PUT SCREEN ROW 9 COLUMN 65 COLOR MA "REV CREDIT  ".
    IF HOLD-TP = "J" THEN
	PUT SCREEN ROW 9 COLUMN 65 COLOR MA "REV CR MEMO ".
    IF HOLD-TP = "K" THEN
	PUT SCREEN ROW 9 COLUMN 65 COLOR MA "BAD DEBT    ".
    IF HOLD-TP = "L" THEN
	PUT SCREEN ROW 9 COLUMN 65 COLOR MA "CUST DAMAGE ".
    IF HOLD-TP = "M" THEN
	PUT SCREEN ROW 9 COLUMN 65 COLOR MA "REV PAYMENT ".
    IF HOLD-TP = "N" THEN
	PUT SCREEN ROW 9 COLUMN 65 COLOR MA "FUEL SURCHRG".
    IF HOLD-TP = "O" THEN
	PUT SCREEN ROW 9 COLUMN 65 COLOR MA "REV FUEL CHG".
    IF HOLD-TP = "P" THEN
	PUT SCREEN ROW 9 COLUMN 65 COLOR MA "FUEL CHG PAY".
    PROMPT-FOR WK1.CHECK# WITH FRAME POST-A.
   REPEAT:
    PROMPT-FOR WK1.SLS# WITH FRAME POST-A.
    HOLD-SLS = INPUT WK1.SLS#.
    FIND SALESMAN WHERE SALESMAN.SLS# = HOLD-SLS.
    IF AVAILABLE SALESMAN THEN LEAVE.
   END.
    ASSIGN WK1.
    CREATE TRANFILE.
    SET TRANFILE.SUB# = WK1.SUB#.
    SET TRANFILE.ROUTE# = WK1.ROUTE#.
    SET TRANFILE.AGE = WK1.AGE.
    SET TRANFILE.REC# = WK1.REC#.
    SET TRANFILE.CHECK# = WK1.CHECK#.
    SET TRANFILE.COMP# = WK1.COMP#.
    SET TRANFILE.CUST# = WK1.CUST#.
    SET TRANFILE.DIV# = WK1.DIV#.
    SET TRANFILE.INV-NO = WK1.INV-NO.
    SET TRANFILE.PERIOD = WK1.PERIOD.
    SET TRANFILE.REFER = WK1.REFER.
    SET TRANFILE.SLS# = WK1.SLS#.
    SET TRANFILE.T-AMT = WK1.T-AMT.
    SET TRANFILE.T-DATE = WK1.T-DATE.
    SET TRANFILE.T-OPR = WK1.T-OPR.
    SET TRANFILE.T-TYPE = WK1.T-TYPE.
    SET TRANFILE.COMMIS = WK1.COMMIS.
    SET TRANFILE.SUB-CON = WK1.SUB-CON.
    IF HOLD-TP = "B" OR HOLD-TP = "E" OR HOLD-TP = "F" OR HOLD-TP = "G" OR
       HOLD-TP = "H" OR HOLD-TP = "I" OR HOLD-TP = "J" OR HOLD-TP = "K" OR
       HOLD-TP = "L" OR HOLD-TP = "M" OR HOLD-TP = "O" OR HOLD-TP = "P"
    THEN
      SET TRANFILE.TR-STAT = "I".
    ELSE
      SET TRANFILE.TR-STAT = "A".
    RELEASE TRANFILE.
    IF HOLD-TP = "G"
      THEN DO:
	CREATE TRANFILE.
	SET TRANFILE.SUB# = WK1.SUB#.
	SET TRANFILE.ROUTE# = WK1.ROUTE#.
	SET TRANFILE.AGE = WK1.AGE.
	SET TRANFILE.REC# = WK1.REC#.
	SET TRANFILE.CHECK# = WK1.CHECK#.
	SET TRANFILE.COMP# = WK1.COMP#.
	SET TRANFILE.CUST# = WK1.CUST#.
	SET TRANFILE.DIV# = WK1.DIV#.
	SET TRANFILE.INV-NO = WK1.INV-NO.
	SET TRANFILE.PERIOD = WK1.PERIOD.
	SET TRANFILE.REFER = WK1.REFER.
	SET TRANFILE.SLS# = WK1.SLS#.
	SET TRANFILE.T-AMT = WK1.T-AMT.
	SET TRANFILE.T-DATE = WK1.T-DATE.
	SET TRANFILE.T-OPR = WK1.T-OPR.
	SET TRANFILE.T-TYPE = "B".
	SET TRANFILE.TR-STAT = "I".
	SET TRANFILE.COMMIS = WK1.COMMIS.
	SET TRANFILE.SUB-CON = WK1.SUB-CON.
	SET WK1.AGE = TRANFILE.AGE.
	SET WK1.REC# = TRANFILE.REC#.
	SET WK1.CHECK# = TRANFILE.CHECK#.
	SET WK1.COMP# = TRANFILE.COMP#.
	SET WK1.CUST# = TRANFILE.CUST#.
	SET WK1.DIV# = TRANFILE.DIV#.
	SET WK1.INV-NO = TRANFILE.INV-NO.
	SET WK1.PERIOD = TRANFILE.PERIOD.
	SET WK1.REFER = TRANFILE.REFER.
	SET WK1.SLS# = TRANFILE.SLS#.
	SET WK1.T-AMT = TRANFILE.T-AMT.
	SET WK1.T-DATE = TRANFILE.T-DATE.
	SET WK1.T-OPR = TRANFILE.T-OPR.
	SET WK1.COMMIS = TRANFILE.COMMIS.
	SET WK1.SUB-CON = TRANFILE.SUB-CON.
	UPDATE WK1.T-TYPE = "B".
	UPDATE WK1.TR-STAT = "I".
	CREATE WK1.
	ASSIGN WK1.
	RELEASE TRANFILE.
      END.
    FIND FIRST ACCT-RCV WHERE ACCT-RCV.COMP# = WK1.COMP# AND ACCT-RCV.DIV# =
		  WK1.DIV# AND ACCT-RCV.CUST# = WK1.CUST#.
    IF HOLD-TP = "A"
      THEN DO:
	ASSIGN ACCT-RCV.TOT-BAL = ACCT-RCV.TOT-BAL + WK1.T-AMT.
	ASSIGN ACCT-RCV.SLS-YTD = ACCT-RCV.SLS-YTD + WK1.T-AMT.
	ASSIGN ACCT-RCV.LST-DATE = WK1.T-DATE.
	ASSIGN ACCT-RCV.BAL-1 = ACCT-RCV.BAL-1 + WK1.T-AMT.
      END.
    IF HOLD-TP = "B"
      THEN DO:
	ASSIGN ACCT-RCV.TOT-BAL = ACCT-RCV.TOT-BAL - WK1.T-AMT.
	ASSIGN ACCT-RCV.LP-DATE = WK1.T-DATE.
	ASSIGN ACCT-RCV.BAL-1 = ACCT-RCV.BAL-1 - WK1.T-AMT.
      END.
    IF HOLD-TP = "C"
      THEN DO:
	ASSIGN ACCT-RCV.TOT-BAL = ACCT-RCV.TOT-BAL - WK1.T-AMT.
	ASSIGN ACCT-RCV.BAL-1 = ACCT-RCV.BAL-1 - WK1.T-AMT.
      END.
    IF HOLD-TP = "D"
      THEN DO:
	ASSIGN ACCT-RCV.SRVC-DUE = ACCT-RCV.SRVC-DUE + WK1.T-AMT.
	ASSIGN ACCT-RCV.SRVC-YTD = ACCT-RCV.SRVC-YTD + WK1.T-AMT.
      END.
    IF HOLD-TP = "E"
      THEN DO:
	ASSIGN ACCT-RCV.SRVC-DUE = ACCT-RCV.SRVC-DUE - WK1.T-AMT.
	ASSIGN ACCT-RCV.SRVC-YTD = ACCT-RCV.SRVC-YTD - WK1.T-AMT.
      END.
    IF HOLD-TP = "F"
      THEN DO:
	ASSIGN ACCT-RCV.SRVC-DUE = ACCT-RCV.SRVC-DUE - WK1.T-AMT.
      END.
    IF HOLD-TP = "G"
      THEN DO:
	ASSIGN ACCT-RCV.SLS-YTD = ACCT-RCV.SLS-YTD + WK1.T-AMT.
	ASSIGN ACCT-RCV.LST-DATE = WK1.T-DATE.
	ASSIGN ACCT-RCV.LP-DATE = WK1.T-DATE.
      END.
    IF HOLD-TP = "H"
      THEN DO:
	ASSIGN ACCT-RCV.TOT-BAL = ACCT-RCV.TOT-BAL - WK1.T-AMT.
	ASSIGN ACCT-RCV.SLS-YTD = ACCT-RCV.SLS-YTD - WK1.T-AMT.
	ASSIGN ACCT-RCV.BAL-1 = ACCT-RCV.BAL-1 - WK1.T-AMT.
      END.
    IF HOLD-TP = "I" OR HOLD-TP = "J"
      THEN DO:
	ASSIGN ACCT-RCV.TOT-BAL = ACCT-RCV.TOT-BAL + WK1.T-AMT.
	ASSIGN ACCT-RCV.BAL-1 = ACCT-RCV.BAL-1 + WK1.T-AMT.
      END.
    IF HOLD-TP = "K" OR HOLD-TP = "L"
      THEN DO:
	ASSIGN ACCT-RCV.TOT-BAL = ACCT-RCV.TOT-BAL - WK1.T-AMT.
	ASSIGN ACCT-RCV.BAL-1 = ACCT-RCV.BAL-1 - WK1.T-AMT.
      END.
    IF HOLD-TP = "M"
      THEN DO:
	ASSIGN ACCT-RCV.TOT-BAL = ACCT-RCV.TOT-BAL + WK1.T-AMT.
	ASSIGN ACCT-RCV.BAL-1 = ACCT-RCV.BAL-1 + WK1.T-AMT.
      END.
    IF HOLD-TP = "N"
      THEN DO:
	ASSIGN ACCT-RCV.SRVC-DUE = ACCT-RCV.SRVC-DUE + WK1.T-AMT.
	ASSIGN ACCT-RCV.SRVC-YTD = ACCT-RCV.SRVC-YTD + WK1.T-AMT.
      END.
    IF HOLD-TP = "O"
      THEN DO:
	ASSIGN ACCT-RCV.SRVC-DUE = ACCT-RCV.SRVC-DUE - WK1.T-AMT.
	ASSIGN ACCT-RCV.SRVC-YTD = ACCT-RCV.SRVC-YTD - WK1.T-AMT.
      END.
    IF HOLD-TP = "P"
      THEN DO:
	ASSIGN ACCT-RCV.SRVC-DUE = ACCT-RCV.SRVC-DUE - WK1.T-AMT.
      END.
    RELEASE ACCT-RCV.
DISPLAY
"================================================================================" SKIP(0)
"   ACCT#          NAME                      AMOUNT       TYPE       DB/CR  SLS# " SKIP(1) WITH FRAME POST NO-BOX NO-HIDE NO-LABEL.
    UPDATE PS-CUST = STRING(WK1.CUST#,"ZZZZZZZZZZ").
    UPDATE PS-AMT = STRING(WK1.T-AMT,"$->>>,>>>,>>>.99").
    UPDATE PS-SLS = STRING(WK1.SLS#,"ZZZ").
    UPDATE PS-TYPE = "            ".
    UPDATE PS-DBCR = "     ".
    IF WK1.T-TYPE = "A"
    THEN DO:
	UPDATE PS-TYPE = "INVOICE     ".
	UPDATE PS-DBCR = " DB  ".
    END.
    IF WK1.T-TYPE = "B"
    THEN DO:
	UPDATE PS-TYPE = "CREDIT      ".
	UPDATE PS-DBCR = " CR  ".
    END.
    IF WK1.T-TYPE = "C"
    THEN DO:
	UPDATE PS-TYPE = "CR MEMO     ".
	UPDATE PS-DBCR = " CR  ".
    END.
    IF WK1.T-TYPE = "D"
    THEN DO:
	UPDATE PS-TYPE = "SRVC CHG    ".
	UPDATE PS-DBCR = " DB  ".
    END.
    IF WK1.T-TYPE = "E"
    THEN DO:
	UPDATE PS-TYPE = "REV SRVC CHG".
	UPDATE PS-DBCR = " CR  ".
    END.
    IF WK1.T-TYPE = "F"
    THEN DO:
	UPDATE PS-TYPE = "SRVC CHG PAY".
	UPDATE PS-DBCR = " CR  ".
    END.
    IF WK1.T-TYPE = "G"
    THEN DO:
	UPDATE PS-TYPE = "CASH SALE   ".
	UPDATE PS-DBCR = "DB&CR".
    END.
    IF WK1.T-TYPE = "H"
    THEN DO:
	UPDATE PS-TYPE = "REV INVOICE ".
	UPDATE PS-DBCR = " CR  ".
    END.
    IF WK1.T-TYPE = "I"
    THEN DO:
	UPDATE PS-TYPE = "REV CREDIT  ".
	UPDATE PS-DBCR = " DB  ".
    END.
    IF WK1.T-TYPE = "J"
    THEN DO:
	UPDATE PS-TYPE = "REV CR MEMO ".
	UPDATE PS-DBCR = " DB  ".
    END.
    IF WK1.T-TYPE = "K"
    THEN DO:
	UPDATE PS-TYPE = "BAD DEBT    ".
	UPDATE PS-DBCR = " CR  ".
    END.
    IF WK1.T-TYPE = "L"
    THEN DO:
	UPDATE PS-TYPE = "CUST DAMAGE ".
	UPDATE PS-DBCR = " CR  ".
    END.
    IF WK1.T-TYPE = "M"
    THEN DO:
	UPDATE PS-TYPE = "REV PAYMENT ".
	UPDATE PS-DBCR = " DB         ".
    END.
    IF WK1.T-TYPE = "N"
    THEN DO:
	UPDATE PS-TYPE = "FUEL SURCHRG".
	UPDATE PS-DBCR = " DB  ".
    END.
    IF WK1.T-TYPE = "O"
    THEN DO:
	UPDATE PS-TYPE = "REV FUEL CHG".
	UPDATE PS-DBCR = " CR  ".
    END.
    IF WK1.T-TYPE = "P"
    THEN DO:
	UPDATE PS-TYPE = "FUEL CHG PAY".
	UPDATE PS-DBCR = " CR  ".
    END.
    PUT SCREEN ROW CTRX COLUMN 79 BASTER.
    PUT SCREEN ROW XCTR NOTHING.
    PUT SCREEN ROW XCTR PS-CUST.
    PUT SCREEN ROW XCTR COLUMN 12 XCST-N.
    PUT SCREEN ROW XCTR COLUMN 38 PS-AMT.
    PUT SCREEN ROW XCTR COLUMN 55 PS-TYPE.
    PUT SCREEN ROW XCTR COLUMN 69 PS-DBCR.
    PUT SCREEN ROW XCTR COLUMN 76 PS-SLS.
    PUT SCREEN ROW XCTR COLUMN 79 ASTER.
    UPDATE CTRX = XCTR.
    IF (XCTR > 20) THEN
	UPDATE XCTR = 13.
    ELSE
	UPDATE XCTR = (XCTR + 1).
 END.
END.
    OUTPUT TO PRINTER.
    FOR EACH WK1.
		    UPDATE HOLD-DB = 0.00.
		    UPDATE HOLD-CR = 0.00.
	IF WK1.T-TYPE = "A" OR WK1.T-TYPE = "D" OR WK1.T-TYPE = "G" OR
	   WK1.T-TYPE = "I" OR WK1.T-TYPE = "J" OR WK1.T-TYPE = "M" OR
	   WK1.T-TYPE = "N"
	     THEN DO:
		    UPDATE TOT-DB = TOT-DB + WK1.T-AMT.
		    UPDATE HOLD-DB = WK1.T-AMT.
		    END.
	IF WK1.T-TYPE = "B" OR WK1.T-TYPE = "C" OR WK1.T-TYPE = "E" OR
	   WK1.T-TYPE = "F" OR WK1.T-TYPE = "O" OR WK1.T-TYPE = "P" OR
	   WK1.T-TYPE = "H" OR WK1.T-TYPE = "K" OR WK1.T-TYPE = "L" THEN DO:
		    UPDATE TOT-CR = TOT-CR + WK1.T-AMT.
		    UPDATE HOLD-CR = WK1.T-AMT.
		    END.
	FORM HEADER TODAY FORMAT "99/99/9999" "A/R TRANACTION JOURNAL" AT 29
		    "PAGE:" AT 65 PAGE-NUMBER FORMAT ">>9" SKIP(0)
		    "COMPANY: " AT 20 XCOM-N
		    "TIME: " AT 65 STRING(TIME,"HH:MM:SS") SKIP(0)
		    "DIVISION: " AT 20 XDIV-N "OPER: " AT 65 XOPR SKIP(0)
		    "POSTING DATE: " P-DATE
		    "ACCOUNTING PERIOD: " AT 40 P-PERIOD FORMAT "XX-XXXX"
		    SKIP(0)
		    "--------------------------------------------------------------------------------" SKIP(0)
		    "   ACCOUNT     NAME                                 DEBIT            CREDIT     " SKIP(0)
		    "    DATE    REFERENCE       INVOICE #     SLS #    AGE
       TYPE           " SKIP(0)
		    "--------------------------------------------------------------------------------" SKIP(0) WITH NO-BOX NO-UNDERLINE.
		    FIND ACCT-RCV WHERE ACCT-RCV.CUST# = WK1.CUST# AND
			ACCT-RCV.COMP# = XCOM AND ACCT-RCV.DIV# = XDIV NO-ERROR.
		    IF NOT AVAILABLE ACCT-RCV THEN LEAVE.
		    DISPLAY WK1.CUST#
			    ACCT-RCV.C-NAME AT 16
			    HOLD-DB AT 45
			    HOLD-CR AT 63 WITH NO-LABELS.
		    DISPLAY WK1.T-DATE
			    WK1.REFER AT 13
			    WK1.INV-NO AT 29
			    WK1.SLS# AT 44
			    WK1.AGE AT 53
			    WK1.T-TYPE AT 63
					  SKIP(0) "--------------------------------------------------------------------------------" WITH NO-LABELS.
END.
	   IF TOT-DB = 0.0 AND TOT-CR = 0.0 THEN LEAVE.
	       DISPLAY "**TOTALS**" AT 20
		       TOT-DB AT 45
		       TOT-CR AT 63 SKIP(1) WITH NO-BOX NO-LABELS.
	       DISPLAY "**COMPARISON TOTALS**" AT 9
		       T-DEBITS AT 45
		       T-CREDITS AT 63 SKIP(1) WITH NO-BOX NO-LABELS.
	       UPDATE HOLD-DB = TOT-DB - T-DEBITS.
	       UPDATE HOLD-CR = TOT-CR - T-CREDITS.
	       DISPLAY "**DIFFERENCE**" AT 16
		       HOLD-DB AT 45
		       HOLD-CR AT 63 SKIP(1) WITH NO-BOX NO-LABELS.
