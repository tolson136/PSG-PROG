/*************************************************/
/* tk-crer.p                                     */
/*                                               */
/* Print monthly tickets                         */
/*                                               */
/*  02/01/2018   TO    Added laser print option  */
/*  10/01/2019   TO    Removed Laser temporarily */
/*                                               */
/*************************************************/

DEFINE SHARED VARIABLE XCOM   AS INTEGER FORMAT "ZZ".
DEFINE SHARED VARIABLE XDIV   AS INTEGER FORMAT "ZZ".
DEFINE SHARED VARIABLE XCOM-N AS CHAR FORMAT "X(30)".
DEFINE SHARED VARIABLE XDIV-N AS CHAR FORMAT "X(30)".
DEFINE SHARED VAR XSUB        AS INT FORMAT "ZZ".
DEFINE SHARED VARIABLE BEG#   AS INTEGER FORMAT "ZZ"
  LABEL "ENTER MONTH & YEAR FOR WHICH YOU WANT TO RUN TICKETS".
DEFINE SHARED VARIABLE D2     AS DECIMAL FORMAT "9999.99".
DEFINE SHARED VARIABLE D3     AS DECIMAL FORMAT "9999".
DEFINE SHARED VARIABLE D4     AS DECIMAL FORMAT "9999.99".
DEFINE SHARED VARIABLE D5     AS INTEGER FORMAT "9999" LABEL "YEAR (4 DIGITS)".
DEFINE SHARED VARIABLE DY     AS INTEGER FORMAT "99".
DEFINE SHARED VARIABLE UP-LIM AS INTEGER FORMAT "99".
DEFINE SHARED VARIABLE LaserPrinter AS LOG.
DEFINE SHARED VARIABLE NumTickets AS INT.

DEFINE VARIABLE C-DATE         AS DATE FORMAT "99/99/9999".
DEFINE VARIABLE H-FREQ         AS CHAR FORMAT "X(5)".
DEFINE VARIABLE L-YEAR         AS LOGICAL.
DEFINE VARIABLE TICKS          AS INTEGER FORMAT "9999".
DEFINE VARIABLE F-TICK         AS LOGICAL.
DEFINE VARIABLE H-WEEK         AS INTEGER FORMAT "9".
DEFINE VARIABLE FirstMonthDate AS DATE NO-UNDO.
DEFINE VARIABLE LastMonthDate  AS DATE NO-UNDO.

DEFINE VARIABLE TicketsPerPage AS INT INIT 3.
DEFINE VARIABLE CurrentTicket  AS INT INIT 1. /* count within expect tickets per*/
DEFINE VARIABLE TicketCount    AS INT INIT 1. /* Count on page */
DEF VAR CoProposal AS CHAR FORMAT "X(30)".
/*DEF VAR ttDocXSequence AS INT.*/
DEF VAR FileName AS CHAR.
DEF VAR Cmd AS CHAR.
def var itemcount as int.
DEFINE VARIABLE Test AS LOG INIT No.
/*
DEF TEMP-TABLE ttDocXPrint
  FIELD Idx AS INT 
  FIELD Week AS CHAR
  FIELD CoProposal AS CHAR
  FIELD Location AS CHAR
  FIELD Note1 AS CHAR
  FIELD Note2 AS CHAR
  FIELD Note3 AS CHAR
  FIELD Note4 AS CHAR
  FIELD Note5 AS CHAR
  FIELD Note6 AS CHAR
  FIELD Note7 AS CHAR
  FIELD Note8 AS CHAR
  FIELD Note9 AS CHAR
  FIELD Note10 AS CHAR
  FIELD StartEndCodEquip AS CHAR
  FIELD SpcIntr AS CHAR
  FIELD Name AS CHAR
  FIELD Address AS CHAR
  FIELD Address2 AS CHAR
  FIELD City AS CHAR
  FIELD Phone AS CHAR FORMAT "XXX-XXX-XXXX"
  FIELD EMail AS CHAR
  FIELD Price AS DEC FORMAT "$9,999.99"
  FIELD Weeks AS CHAR
  FIELD Days AS CHAR
  FIELD wScheduled AS LOG
  FIELD dScheduled AS LOG
  .
  
{slibooxml/slibdocx.i}
{include/stdutils.i}
{slib/slibos.i}
*/
IF (USERID = "OPERATIONS") OR (USERID = "LANDMARK") OR (USERID = "GARCIA")
THEN DO:
    MESSAGE "YOU ARE NOT AUTHORIZED TO RUN THIS PROCEDURE".
    RETURN.
END.
IF NOT LaserPrinter THEN DO:
   IF NOT Test THEN OUTPUT TO PRINTER PAGE-SIZE 0 .
   ELSE OUTPUT TO "c:\psg-work\monthlyticket.txt".
END.
  FOR EACH PROPSL WHERE PROPSL.COMP# = XCOM AND
			PROPSL.DIV# = XDIV BY PROPSL.CUST#:
    IF PROPSL.JANITOR = yes THEN NEXT.
    /*itemcount = itemcount + 1.
    if itemcount GT 40 then next.*/
    FIND FIRST ACCT-RCV WHERE ACCT-RCV.COMP# = XCOM AND
			      ACCT-RCV.DIV# = XDIV AND
			      ACCT-RCV.CUST# = PROPSL.CUST# AND
			      ACCT-RCV.C-STATUS <> "I" NO-ERROR.
    IF NOT AVAILABLE ACCT-RCV THEN NEXT.
    IF ACCT-RCV.C-STATUS = "I" THEN NEXT.
    FOR EACH PRO-DESP WHERE PRO-DESP.COMP# = XCOM AND
			    PRO-DESP.DIV# = XDIV AND
			    PRO-DESP.CUST# = PROPSL.CUST# AND
			    PRO-DESP.PROPSL# = PROPSL.PROPSL# AND
			    PRO-DESP.SUB#    = xsub AND
			    PRO-DESP.ROUTE# = 0:
      F-TICK = no.
      H-FREQ = "".
      IF PRO-DESP.FREQ = "DAILY" THEN DO:
               H-FREQ = "D".
               TICKS = UP-LIM.
               F-TICK = yes.
      END.         
      IF PRO-DESP.FREQ = "TWO_TIMES_PER_WEEK" THEN DO:
	  H-FREQ = "2XW".
	  TICKS = 0.
	  F-TICK = yes.
	  REPEAT DY = 1 TO UP-LIM:
	      C-DATE = DATE(BEG#,DY,D5).
	      H-WEEK = WEEKDAY(C-DATE).
	      IF H-WEEK = 1 AND PRO-DESP.WKDAY[2] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 2 AND PRO-DESP.WKDAY[3] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 3 AND PRO-DESP.WKDAY[4] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 4 AND PRO-DESP.WKDAY[5] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 5 AND PRO-DESP.WKDAY[6] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 6 AND PRO-DESP.WKDAY[7] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 7 AND PRO-DESP.WKDAY[1] THEN TICKS = TICKS + 1.
	  END.
      END.
      IF PRO-DESP.FREQ = "THREE_TIMES_PER_WEEK" THEN DO:
	  H-FREQ = "3XW".
	  TICKS = 0.
	  F-TICK = yes.
	  REPEAT DY = 1 TO UP-LIM:
	      C-DATE = DATE(BEG#,DY,D5).
	      H-WEEK = WEEKDAY(C-DATE).
	      IF H-WEEK = 1 AND PRO-DESP.WKDAY[2] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 2 AND PRO-DESP.WKDAY[3] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 3 AND PRO-DESP.WKDAY[4] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 4 AND PRO-DESP.WKDAY[5] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 5 AND PRO-DESP.WKDAY[6] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 6 AND PRO-DESP.WKDAY[7] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 7 AND PRO-DESP.WKDAY[1] THEN TICKS = TICKS + 1.
	  END.
      END.
      IF PRO-DESP.FREQ = "FOUR_TIMES_PER_WEEK" THEN DO:
	  H-FREQ = "4XW".
	  TICKS = 0.
	  F-TICK = yes.
	  REPEAT DY = 1 TO UP-LIM:
	      C-DATE = DATE(BEG#,DY,D5).
	      H-WEEK = WEEKDAY(C-DATE).
	      IF H-WEEK = 1 AND PRO-DESP.WKDAY[2] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 2 AND PRO-DESP.WKDAY[3] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 3 AND PRO-DESP.WKDAY[4] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 4 AND PRO-DESP.WKDAY[5] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 5 AND PRO-DESP.WKDAY[6] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 6 AND PRO-DESP.WKDAY[7] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 7 AND PRO-DESP.WKDAY[1] THEN TICKS = TICKS + 1.
	  END.
      END.
      IF PRO-DESP.FREQ = "FIVE_TIMES_PER_WEEK" THEN DO:
	  H-FREQ = "5XW".
	  TICKS = 0.
	  F-TICK = yes.
	  REPEAT DY = 1 TO UP-LIM:
	      C-DATE = DATE(BEG#,DY,D5).
	      H-WEEK = WEEKDAY(C-DATE).
	      IF H-WEEK = 1 AND PRO-DESP.WKDAY[2] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 2 AND PRO-DESP.WKDAY[3] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 3 AND PRO-DESP.WKDAY[4] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 4 AND PRO-DESP.WKDAY[5] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 5 AND PRO-DESP.WKDAY[6] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 6 AND PRO-DESP.WKDAY[7] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 7 AND PRO-DESP.WKDAY[1] THEN TICKS = TICKS + 1.
	  END.
      END.
      IF PRO-DESP.FREQ = "SIX_TIMES_PER_WEEK" THEN DO:
	  H-FREQ = "6XW".
	  TICKS = 0.
	  F-TICK = yes.
	  REPEAT DY = 1 TO UP-LIM:
	      C-DATE = DATE(BEG#,DY,D5).
	      H-WEEK = WEEKDAY(C-DATE).
	      IF H-WEEK = 1 AND PRO-DESP.WKDAY[2] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 2 AND PRO-DESP.WKDAY[3] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 3 AND PRO-DESP.WKDAY[4] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 4 AND PRO-DESP.WKDAY[5] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 5 AND PRO-DESP.WKDAY[6] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 6 AND PRO-DESP.WKDAY[7] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 7 AND PRO-DESP.WKDAY[1] THEN TICKS = TICKS + 1.
	  END.
      END.
      IF PRO-DESP.FREQ = "WEEKLY" THEN DO:
	  H-FREQ = "W".
	  TICKS = 0.
	  F-TICK = yes.
	  REPEAT DY = 1 TO UP-LIM:
	      C-DATE = DATE(BEG#,DY,D5).
	      H-WEEK = WEEKDAY(C-DATE).
	      IF H-WEEK = 1 AND PRO-DESP.WKDAY[2] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 2 AND PRO-DESP.WKDAY[3] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 3 AND PRO-DESP.WKDAY[4] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 4 AND PRO-DESP.WKDAY[5] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 5 AND PRO-DESP.WKDAY[6] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 6 AND PRO-DESP.WKDAY[7] THEN TICKS = TICKS + 1.
	      IF H-WEEK = 7 AND PRO-DESP.WKDAY[1] THEN TICKS = TICKS + 1.
	  END.
      END.
      IF PRO-DESP.FREQ = "EVERY_TWO_WEEKS" THEN DO:
	  H-FREQ = "2W".
	  TICKS = 0.
	  F-TICK = yes.
	  IF PRO-DESP.CL-DATE + 14 >= DATE(BEG#,1,D5) AND
	     PRO-DESP.CL-DATE + 14 <= DATE(BEG#,UP-LIM,D5)
	     THEN TICKS = TICKS + 1.
	  IF PRO-DESP.CL-DATE + 28 >= DATE(BEG#,1,D5) AND
	     PRO-DESP.CL-DATE + 28 <= DATE(BEG#,UP-LIM,D5)
	     THEN TICKS = TICKS + 1.
	  IF PRO-DESP.CL-DATE + 42 >= DATE(BEG#,1,D5) AND
	     PRO-DESP.CL-DATE + 42 <= DATE(BEG#,UP-LIM,D5)
	     THEN TICKS = TICKS + 1.
	  IF PRO-DESP.CL-DATE + 56 >= DATE(BEG#,1,D5) AND
	     PRO-DESP.CL-DATE + 56 <= DATE(BEG#,UP-LIM,D5)
	     THEN TICKS = TICKS + 1.
	  IF PRO-DESP.CL-DATE + 70 >= DATE(BEG#,1,D5) AND
	     PRO-DESP.CL-DATE + 70 <= DATE(BEG#,UP-LIM,D5)
	     THEN TICKS = TICKS + 1.
	  IF PRO-DESP.CL-DATE = 01/01/1901 THEN TICKS = 2.
      END.
      IF PRO-DESP.FREQ = "EVERY_THREE_WEEKS" THEN DO:
	  H-FREQ = "3W".
	  TICKS = 0.
	  F-TICK = yes.
	  IF PRO-DESP.CL-DATE + 21 >= DATE(BEG#,1,D5) AND
	     PRO-DESP.CL-DATE + 21 <= DATE(BEG#,UP-LIM,D5)
	     THEN TICKS = TICKS + 1.
	  IF PRO-DESP.CL-DATE + 42 >= DATE(BEG#,1,D5) AND
	     PRO-DESP.CL-DATE + 42 <= DATE(BEG#,UP-LIM,D5)
	     THEN TICKS = TICKS + 1.
	  IF PRO-DESP.CL-DATE + 63 >= DATE(BEG#,1,D5) AND
	     PRO-DESP.CL-DATE + 63 <= DATE(BEG#,UP-LIM,D5)
	     THEN TICKS = TICKS + 1.
	  IF PRO-DESP.CL-DATE = 01/01/1901 THEN TICKS = 1.
      END.
      IF PRO-DESP.FREQ = "EVERY_FOUR_WEEKS" THEN DO:
	  H-FREQ = "4W".
	  TICKS = 0.
	  F-TICK = yes.
	  IF PRO-DESP.CL-DATE + 28 >= DATE(BEG#,1,D5) AND
	     PRO-DESP.CL-DATE + 28 <= DATE(BEG#,UP-LIM,D5)
	     THEN TICKS = TICKS + 1.
	  IF PRO-DESP.CL-DATE + 56 >= DATE(BEG#,1,D5) AND
	     PRO-DESP.CL-DATE + 56 <= DATE(BEG#,UP-LIM,D5)
	     THEN TICKS = TICKS + 1.
	  IF PRO-DESP.CL-DATE + 84 >= DATE(BEG#,1,D5) AND
	     PRO-DESP.CL-DATE + 84 <= DATE(BEG#,UP-LIM,D5)
	     THEN TICKS = TICKS + 1.
	  IF PRO-DESP.CL-DATE = 01/01/1901 THEN TICKS = 1.
      END.
      IF PRO-DESP.FREQ = "EVERY_FIVE_WEEKS" THEN DO:
	  H-FREQ = "5W".
	  TICKS = 0.
	  F-TICK = yes.
	  IF PRO-DESP.CL-DATE + 35 >= DATE(BEG#,1,D5) AND
	     PRO-DESP.CL-DATE + 35 <= DATE(BEG#,UP-LIM,D5)
	     THEN TICKS = TICKS + 1.
	  IF PRO-DESP.CL-DATE + 70 >= DATE(BEG#,1,D5) AND
	     PRO-DESP.CL-DATE + 70 <= DATE(BEG#,UP-LIM,D5)
	     THEN TICKS = TICKS + 1.
	  IF PRO-DESP.CL-DATE = 01/01/1901 THEN TICKS = 1.
      END.
      IF PRO-DESP.FREQ = "EVERY_SIX_WEEKS" THEN DO:
	  H-FREQ = "6W".
	  TICKS = 0.
	  F-TICK = yes.
	  IF PRO-DESP.CL-DATE + 42 >= DATE(BEG#,1,D5) AND
	     PRO-DESP.CL-DATE + 42 <= DATE(BEG#,UP-LIM,D5)
	     THEN TICKS = TICKS + 1.
	  IF PRO-DESP.CL-DATE + 84 >= DATE(BEG#,1,D5) AND
	     PRO-DESP.CL-DATE + 84 <= DATE(BEG#,UP-LIM,D5)
	     THEN TICKS = TICKS + 1.
	  IF PRO-DESP.CL-DATE = 01/01/1901 THEN TICKS = 1.
      END.
      IF PRO-DESP.FREQ = "EVERY_EIGHT_WEEKS" THEN DO:
	  H-FREQ = "8W".
	  TICKS = 0.
	  F-TICK = yes.
	  IF PRO-DESP.CL-DATE + 56 >= DATE(BEG#,1,D5) AND
	     PRO-DESP.CL-DATE + 56 <= DATE(BEG#,UP-LIM,D5)
	     THEN TICKS = TICKS + 1.
	  IF PRO-DESP.CL-DATE + 112 >= DATE(BEG#,1,D5) AND
	     PRO-DESP.CL-DATE + 112 <= DATE(BEG#,UP-LIM,D5)
	     THEN TICKS = TICKS + 1.
	  IF PRO-DESP.CL-DATE = 01/01/1901 THEN TICKS = 1.
      END.
      IF PRO-DESP.FREQ = "MONTHLY" THEN DO:
	  H-FREQ = "M".
	  TICKS = 1.
	  F-TICK = yes.
      END.
      IF PRO-DESP.FREQ = "QUARTERLY" AND PRO-DESP.MTH[BEG#] THEN DO:
	  H-FREQ = "Q".
	  TICKS = 1.
	  F-TICK = yes.
      END.
      IF PRO-DESP.FREQ = "TWO_TIMES_PER_MONTH" THEN DO:
	  H-FREQ = "2XM".
	  TICKS = 2.
	  F-TICK = yes.
      END.
      IF PRO-DESP.FREQ = "ANNUAL" AND PRO-DESP.MTH[BEG#] THEN DO:
	  H-FREQ = "A".
	  TICKS = 1.
	  F-TICK = yes.
      END.
      IF PRO-DESP.FREQ = "TWO_TIMES_PER_YEAR" AND PRO-DESP.MTH[BEG#]
	THEN DO:
	  H-FREQ = "2XYR".
	  TICKS = 1.
	  F-TICK = yes.
      END.
      IF PRO-DESP.FREQ = "THREE_TIMES_PER_YEAR" AND PRO-DESP.MTH[BEG#]
	THEN DO:
	  H-FREQ = "3XYR".
	  TICKS = 1.
	  F-TICK = yes.
      END.
      IF PRO-DESP.FREQ = "FOUR_TIMES_PER_YEAR" AND PRO-DESP.MTH[BEG#]
	THEN DO:
	  H-FREQ = "4XYR".
	  TICKS = 1.
	  F-TICK = yes.
      END.
      IF PRO-DESP.FREQ = "FIVE_TIMES_PER_YEAR" AND PRO-DESP.MTH[BEG#]
	THEN DO:
	  H-FREQ = "5XYR".
	  TICKS = 1.
	  F-TICK = yes.
      END.
      IF PRO-DESP.FREQ = "SIX_TIMES_PER_YEAR" AND PRO-DESP.MTH[BEG#]
	THEN DO:
	  H-FREQ = "6XYR".
	  TICKS = 1.
	  F-TICK = yes.
      END.
      IF PRO-DESP.FREQ = "SEVEN_TIMES_PER_YEAR" AND PRO-DESP.MTH[BEG#]
	THEN DO:
	  H-FREQ = "7XYR".
	  TICKS = 1.
	  F-TICK = yes.
      END.
      IF PRO-DESP.FREQ = "EIGHT_TIMES_PER_YEAR" AND PRO-DESP.MTH[BEG#]
	THEN DO:
	  H-FREQ = "8XYR".
	  TICKS = 1.
	  F-TICK = yes.
      END.
      IF PRO-DESP.FREQ = "NINE_TIMES_PER_YEAR" AND PRO-DESP.MTH[BEG#]
	THEN DO:
	  H-FREQ = "9XYR".
	  TICKS = 1.
	  F-TICK = yes.
      END.
      IF PRO-DESP.FREQ = "TEN_TIMES_PER_YEAR" AND PRO-DESP.MTH[BEG#]
	THEN DO:
	  H-FREQ = "10XYR".
	  TICKS = 1.
	  F-TICK = yes.
      END.
      IF PRO-DESP.FREQ = "ELEVEN_TIMES_PER_YEAR" AND PRO-DESP.MTH[BEG#]
	THEN DO:
	  H-FREQ = "11XYR".
	  TICKS = 1.
	  F-TICK = yes.
      END.
      IF PRO-DESP.FREQ = "EVERY_TWO_YEARS" THEN
	  IF (D5 - YEAR(PRO-DESP.CL-DATE) = 2) AND PRO-DESP.MTH[BEG#] THEN DO:
	      H-FREQ = "1X2YR".
	      TICKS = 1.
	      F-TICK = yes.
	  END.
      IF PRO-DESP.FREQ = "EVERY_THREE_YEARS" THEN
	  IF (D5 - YEAR(PRO-DESP.CL-DATE) = 3) AND PRO-DESP.MTH[BEG#] THEN DO:
	      H-FREQ = "1X3YR".
	      TICKS = 1.
	      F-TICK = yes.
	  END.
      IF PRO-DESP.FREQ = "EVERY_FOUR_YEARS" THEN
	  IF (D5 - YEAR(PRO-DESP.CL-DATE) = 4) AND PRO-DESP.MTH[BEG#] THEN DO:
	      H-FREQ = "1X4YR".
	      TICKS = 1.
	      F-TICK = yes.
	  END.
      IF PRO-DESP.FREQ = "EVERY_FIVE_YEARS" THEN
	  IF (D5 - YEAR(PRO-DESP.CL-DATE) = 5) AND PRO-DESP.MTH[BEG#] THEN DO:
	      H-FREQ = "1X5YR".
	      TICKS = 1.
	      F-TICK = yes.
	  END.
      IF PRO-DESP.FREQ = "EVERY_EIGHTEEN_MONTHS" THEN
	  IF PRO-DESP.CL-DATE + 549 >= DATE(BEG#,1,D5) AND
	     PRO-DESP.CL-DATE + 549 <= DATE(BEG#,UP-LIM,D5)
	     THEN DO:
	       TICKS = 1.
	       H-FREQ = "1X18M".
	       F-TICK = yes.
	  END.
      IF PRO-DESP.FREQ = "SPECIAL_CLEANING" AND PRO-DESP.MTH[BEG#] THEN DO:
	  H-FREQ = "SPCL".
	  TICKS = 1.
	  F-TICK = yes.
      END.
      IF PRO-DESP.FREQ = "ON_CALL" AND PRO-DESP.MTH[BEG#] THEN DO:
	  H-FREQ = "OC".
	  TICKS = 1.
	  F-TICK = yes.
      END.
      IF PRO-DESP.FREQ = "INITIAL_CLEANING" AND PRO-DESP.MTH[BEG#] THEN DO:
	  H-FREQ = "IC".
	  TICKS = 1.
	  F-TICK = yes.
      END.
      IF PRO-DESP.FREQ = "ONE_TIME_CLEANING" AND PRO-DESP.MTH[BEG#] THEN DO:
	  H-FREQ = "1X".
	  TICKS = 1.
	  F-TICK = yes.
      END.
    IF F-TICK THEN DO:
      REPEAT DY = 1 TO TICKS:
      FIND FIRST TICKET WHERE TICKET.COMP# = ACCT-RCV.COMP# AND
			      TICKET.DIV# = ACCT-RCV.DIV# AND
			      TICKET.CUST# = ACCT-RCV.CUST# AND
			      TICKET.PROPSL# = PRO-DESP.PROPSL# AND
			      TICKET.ITEM# = PRO-DESP.ITEM# AND
			      TICKET.MONTH# = BEG# AND
			      TICKET.T-INDX = DY NO-ERROR.
      /*IF AVAILABLE TICKET THEN NEXT.*/
      IF NOT LaserPrinter THEN 
          DISPLAY SPACE(74) H-FREQ SKIP(1) SPACE(44)
	      STRING(PRO-DESP.COMP#, ">>") + "-" +
	      TRIM(STRING(PRO-DESP.DIV#, ">>")) + "-" +
	      TRIM(STRING(PRO-DESP.CUST#, ">>>>>>>>>>")) + "-" +
	      TRIM(STRING(PRO-DESP.PROPSL#, ">>>>>>>>>>")) + "-" +
	      TRIM(STRING(PRO-DESP.ITEM#, ">>>>")) + "-" +
	      TRIM(STRING(BEG#, ">>")) + "-" +
	      TRIM(STRING(DY, ">>"))
		FORMAT "X(35)" SKIP(1) SPACE(20)
	      PROPSL.L-NAME SPACE(1)
	      PROPSL.LADDR01 SKIP(0) SPACE(20)
	      PROPSL.LADDR02 SPACE(1)
	      PROPSL.LADDR03 SKIP(0)
	      PRO-DESP.DESC01 SKIP(0)
	      PRO-DESP.DESC02 SKIP(0)
	      PRO-DESP.DESC03 SKIP(0)
	      PRO-DESP.DESC04 SKIP(0)
	      PRO-DESP.DESC05 SKIP(0)
	      PRO-DESP.DESC06 SKIP(0)
	      PRO-DESP.DESC07 SKIP(0)
	      PRO-DESP.DESC08 SKIP(0)
	      PRO-DESP.DESC09 SKIP(0)
	      PRO-DESP.DESC10 SKIP(1)
	      PRO-DESP.SPC-INTR SKIP(4)
	      WITH FRAME P NO-BOX NO-LABELS.
	      IF NOT AVAILABLE(Ticket) THEN CREATE TICKET.
	      TICKET.COMP# = ACCT-RCV.COMP#.
	      TICKET.DIV# = ACCT-RCV.DIV#.
	      TICKET.CUST# = ACCT-RCV.CUST#.
	      TICKET.PROPSL# = PRO-DESP.PROPSL#.
	      TICKET.ITEM# = PRO-DESP.ITEM#.
	      TICKET.MONTH# = BEG#.
	      TICKET.T-INDX = DY.
	      TICKET.DATE-PRT = TODAY.
	      TICKET.DL-BUD = PRO-DESP.DL.
	      TICKET.DL-BAL = PRO-DESP.DL.
	      TICKET.WK-DL-BUD = PRO-DESP.DL.
	      TICKET.WK-DL-BAL = PRO-DESP.DL.
	      TICKET.PRT = "Y".
	      TICKET.T-STAT = "P".
	      TICKET.FREQ = PRO-DESP.FREQ.
	      IF PRO-DESP.WHCH-AMT = 1 THEN DO:
		  TICKET.TOT-AMT = PRO-DESP.AMT.
		  TICKET.WK-START = PRO-DESP.AMT.
		  TICKET.TOT-AMT-REM = PRO-DESP.AMT.
	      END.
	      IF PRO-DESP.WHCH-AMT = 2 THEN DO:
		  TICKET.TOT-AMT = AMT2 * AMT2-MUL.
		  TICKET.WK-START = AMT2 * AMT2-MUL.
		  TICKET.TOT-AMT-REM = AMT2 * AMT2-MUL.
	      END.
/*****************         
         IF LaserPrinter THEN DO:

           CoProposal = 
                 STRING(PRO-DESP.COMP#, ">>") + "-" +
 	          TRIM(STRING(PRO-DESP.DIV#, ">>")) + "-" + 
	          TRIM(STRING(PRO-DESP.CUST#, ">>>>>>>>>>")) + "-" +
	          TRIM(STRING(PRO-DESP.PROPSL#, ">>>>>>>>>>")) + "-" +
	          TRIM(STRING(PRO-DESP.ITEM#, ">>>>")) + "-" +
	          TRIM(STRING(Beg#, ">>")) + "-" +
	          /*trim(string(gweek, ">>")) + "-" +*/
	          TRIM(STRING(DY, ">>")).
	    REPEAT CurrentTicket = 1 TO 1: /* how many of each to print */  
	       CREATE ttDocXPrint.
              ASSIGN 
                  ttDocXPrint.Idx              = ttDocXSequence
                  ttDocXPrint.Week             = h-Freq
                  ttDocXPrint.CoProposal       = CoProposal
                  ttDocXPrint.Location         = Propsl.L-Name + " " + 
                                                 Propsl.Laddr01 + " " +
                                                 Propsl.Laddr02 + " " +
                                                 propsl.laddr03
                  ttDocXPrint.Note1            = PRO-DESP.DESC01
                  ttDocXPrint.Note2            = PRO-DESP.DESC02
                  ttDocXPrint.Note3            = PRO-DESP.DESC03
                  ttDocXPrint.Note4            = PRO-DESP.DESC04
                  ttDocXPrint.Note5            = PRO-DESP.DESC05
                  ttDocXPrint.Note6            = PRO-DESP.DESC06
                  ttDocXPrint.Note7            = PRO-DESP.DESC07
                  ttDocXPrint.Note8            = PRO-DESP.DESC08
                  ttDocXPrint.Note9            = PRO-DESP.DESC09
                  ttDocXPrint.Note10           = PRO-DESP.DESC10
                  ttDocXPrint.STartEndCodEquip =  "  Equip: " +
                                                  PRO-DESP.EquipmentRequired
                  ttDocXPrint.SpcIntr          =  PRO-DESP.SPC-INTR
                  ttDocXPrint.Name             = PROPSL.ADDR4
                  ttDocXPrint.Address          = PROPSL.ADDR1
                  ttDocXPrint.Address2         = PROPSL.ADDR2
                  ttDocXPrint.City             = PROPSL.ADDR3
                  ttDocXPrint.Phone            = PROPSL.TELE
                  ttDocXPrint.EMail            = PROPSL.email1
                  ttDocXPrint.Price            = PRO-DESP.AMT
                  ttDocXPrint.Weeks            = IF PRO-DESP.wks[1]   THEN ttDocXPrint.Weeks + "1 "  ELSE ttDocXPrint.Weeks
                  ttDocXPrint.Weeks            = IF PRO-DESP.wks[2]   THEN ttDocXPrint.Weeks + "2 "  ELSE ttDocXPrint.Weeks
                  ttDocXPrint.Weeks            = IF PRO-DESP.wks[3]   THEN ttDocXPrint.Weeks + "3 "  ELSE ttDocXPrint.Weeks
                  ttDocXPrint.Weeks            = IF PRO-DESP.wks[4]   THEN ttDocXPrint.Weeks + "4 "  ELSE ttDocXPrint.Weeks
                  ttDocXPrint.Weeks            = IF PRO-DESP.wks[5]   THEN ttDocXPrint.Weeks + "5 "  ELSE ttDocXPrint.Weeks
                  ttDocXPrint.Days             = IF PRO-DESP.WKDAY[1] THEN ttDocXPrint.Days  + "Sa " ELSE ttDocxPrint.Days
                  ttDocXPrint.Days             = IF PRO-DESP.WKDAY[2] THEN ttDocXPrint.Days  + "Su " ELSE ttDocxPrint.Days
                  ttDocXPrint.Days             = IF PRO-DESP.WKDAY[3] THEN ttDocXPrint.Days  + "Mo " ELSE ttDocxPrint.Days
                  ttDocXPrint.Days             = IF PRO-DESP.WKDAY[4] THEN ttDocXPrint.Days  + "Tu " ELSE ttDocxPrint.Days
                  ttDocXPrint.Days             = IF PRO-DESP.WKDAY[5] THEN ttDocXPrint.Days  + "We " ELSE ttDocxPrint.Days
                  ttDocXPrint.Days             = IF PRO-DESP.WKDAY[6] THEN ttDocXPrint.Days  + "Th " ELSE ttDocxPrint.Days
                  ttDocXPrint.Days             = IF PRO-DESP.WKDAY[7] THEN ttDocXPrint.Days  + "Fr " ELSE ttDocxPrint.Days
                  ttDocXPrint.wScheduled       = IF PRO-DESP.wks[1]      THEN Yes 
                                                 ELSE IF PRO-DESP.wks[2] THEN YES
                                                 ELSE IF PRO-DESP.wks[3] THEN YES
                                                 ELSE IF PRO-DESP.wks[4] THEN YES
                                                 ELSE IF PRO-DESP.wks[5] THEN YES
                                                 ELSE No
                  ttDocXPrint.dScheduled       = IF PRO-DESP.WKDAY[1]       THEN YES
                                                 ELSE IF PRO-DESP.WKDAY[2]  THEN YES
                                                 ELSE IF PRO-DESP.WKDAY[3]  THEN YES
                                                 ELSE IF PRO-DESP.WKDAY[4]  THEN YES
                                                 ELSE IF PRO-DESP.WKDAY[5]  THEN YES
                                                 ELSE IF PRO-DESP.WKDAY[6]  THEN YES
                                                 ELSE IF PRO-DESP.WKDAY[7]  THEN YES                     
                                                 ELSE No
                  .
              ttDocXSequence = ttDocXSequence + 1.    
                          
           END. /* REPEAT CurrentTicket */
        END. /* IF Laser */ 	      
	    ******************************/
     RELEASE TICKET.
	  END.
	END.

    END.
 END.   
    /*******************************
    IF LaserPrinter THEN DO: /* Print ticket data to Word if Laser */
         IF NOT Test THEN RUN docx_load("p:\template\TicketsMonthly1Page.dfw").
         IF Test     THEN RUN docx_load("c:\psg-prog\template\TicketsMonthly1Page.dfw").
    	  FOR EACH ttDocXPrint BY Idx:
    	       IF NOT (ttDocXPrint.wScheduled = Yes AND ttDocXPrint.dScheduled = Yes) THEN NEXT. 
    	           /* Print Scheduled 1st, then non-scheduled */
    	       /*display idx ttDocXPrint.CoProposal ttDocXPrint.Location. pause.*/
    	        run docx_setClipboardValue("Ticket",string(1) + "Week", ttDocXPrint.Week).
               run docx_setClipboardValue("Ticket",string(1) + "ProposalNumber", ttDocXPrint.CoProposal).  
               run docx_setClipboardValue("Ticket",string(1) + "Location", ttDocXPrint.Location).
               run docx_setClipboardValue("Ticket",string(1) + "Note1", ttDocXPrint.Note1).
               run docx_setClipboardValue("Ticket",string(1) + "Note2", ttDocXPrint.Note2).
               run docx_setClipboardValue("Ticket",string(1) + "Note3", ttDocXPrint.Note3).
               run docx_setClipboardValue("Ticket",string(1) + "Note4", ttDocXPrint.Note4).
               run docx_setClipboardValue("Ticket",string(1) + "Note5", ttDocXPrint.Note5).
               run docx_setClipboardValue("Ticket",string(1) + "Note6", ttDocXPrint.Note6).
               run docx_setClipboardValue("Ticket",string(1) + "Note7", ttDocXPrint.Note7).
               run docx_setClipboardValue("Ticket",string(1) + "Note8", ttDocXPrint.Note8).
               run docx_setClipboardValue("Ticket",string(1) + "Note9", ttDocXPrint.Note9).
               run docx_setClipboardValue("Ticket",string(1) + "Note10", ttDocXPrint.Note10).
               run docx_setClipboardValue("Ticket",string(1) + "StartEndCodEquip", ttDocXPrint.StartEndCodEquip).
               run docx_setClipboardValue("Ticket",string(1) + "SpcIntr", ttDocXPrint.SpcIntr).
               
    	        run docx_setClipboardValue("Ticket",string(2) + "Week", ttDocXPrint.Week).
               run docx_setClipboardValue("Ticket",string(2) + "ProposalNumber", ttDocXPrint.CoProposal).  
               run docx_setClipboardValue("Ticket",string(2) + "Location", ttDocXPrint.Location).
               run docx_setClipboardValue("Ticket",string(2) + "Note1", ttDocXPrint.Note1).
               run docx_setClipboardValue("Ticket",string(2) + "Note2", ttDocXPrint.Note2).
               run docx_setClipboardValue("Ticket",string(2) + "Note3", ttDocXPrint.Note3).
               run docx_setClipboardValue("Ticket",string(2) + "Note4", ttDocXPrint.Note4).
               run docx_setClipboardValue("Ticket",string(2) + "Note5", ttDocXPrint.Note5).
               run docx_setClipboardValue("Ticket",string(2) + "Note6", ttDocXPrint.Note6).
               run docx_setClipboardValue("Ticket",string(2) + "Note7", ttDocXPrint.Note7).
               run docx_setClipboardValue("Ticket",string(2) + "Note8", ttDocXPrint.Note8).
               run docx_setClipboardValue("Ticket",string(2) + "Note9", ttDocXPrint.Note9).
               run docx_setClipboardValue("Ticket",string(2) + "Note10", ttDocXPrint.Note10).
               run docx_setClipboardValue("Ticket",string(2) + "StartEndCodEquip", ttDocXPrint.StartEndCodEquip).
               run docx_setClipboardValue("Ticket",string(2) + "SpcIntr", ttDocXPrint.SpcIntr).               
               run docx_paste("Ticket").
               
    	        run docx_setClipboardValue("Ticket",string(1) + "Week", ttDocXPrint.Week).
               run docx_setClipboardValue("Ticket",string(1) + "ProposalNumber", ttDocXPrint.CoProposal).  
               run docx_setClipboardValue("Ticket",string(1) + "Location", ttDocXPrint.Location).
               run docx_setClipboardValue("Ticket",string(1) + "Note1", ttDocXPrint.Name +
                                                                        "                                       " +
                                                                        STRING(ttDocXPrint.Price,"$ZZ,ZZ9.99")   + 
                                                                        "      Weeks: " + ttDocXPrint.Weeks      +
                                                                        "      Days: " + ttDocXPrint.Days).
               run docx_setClipboardValue("Ticket",string(1) + "Note2", ttDocXPrint.Address).
               run docx_setClipboardValue("Ticket",string(1) + "Note3", ttDocXPrint.City).
               run docx_setClipboardValue("Ticket",string(1) + "Note4", ttDocXPrint.Phone).
               run docx_setClipboardValue("Ticket",string(1) + "Note5", ttDocXPrint.EMail).
               run docx_setClipboardValue("Ticket",string(1) + "Note6", 
                "____________________________________________________________________________________________________").
               run docx_setClipboardValue("Ticket",string(1) + "Note7", 
               "_____________________________________________________________________________________________________").
               run docx_setClipboardValue("Ticket",string(1) + "Note8", 
               "_____________________________________________________________________________________________________").
               run docx_setClipboardValue("Ticket",string(1) + "Note9", 
               "_____________________________________________________________________________________________________").
               run docx_setClipboardValue("Ticket",string(1) + "Note10", 
               "_____________________________________________________________________________________________________").
               run docx_setClipboardValue("Ticket",string(1) + "StartEndCodEquip", 
               "_____________________________________________________________________________________________________").
               run docx_setClipboardValue("Ticket",string(1) + "SpcIntr", 
               "_____________________________________________________________________________________________________").
               
    	        run docx_setClipboardValue("Ticket",string(2) + "Week", ttDocXPrint.Week).
               run docx_setClipboardValue("Ticket",string(2) + "ProposalNumber", ttDocXPrint.CoProposal).  
               run docx_setClipboardValue("Ticket",string(2) + "Location", ttDocXPrint.Location).
               run docx_setClipboardValue("Ticket",string(2) + "Note1", ttDocXPrint.Note1).
               run docx_setClipboardValue("Ticket",string(2) + "Note2", ttDocXPrint.Note2).
               run docx_setClipboardValue("Ticket",string(2) + "Note3", ttDocXPrint.Note3).
               run docx_setClipboardValue("Ticket",string(2) + "Note4", ttDocXPrint.Note4).
               run docx_setClipboardValue("Ticket",string(2) + "Note5", ttDocXPrint.Note5).
               run docx_setClipboardValue("Ticket",string(2) + "Note6", ttDocXPrint.Note6).
               run docx_setClipboardValue("Ticket",string(2) + "Note7", ttDocXPrint.Note7).
               run docx_setClipboardValue("Ticket",string(2) + "Note8", ttDocXPrint.Note8).
               run docx_setClipboardValue("Ticket",string(2) + "Note9", ttDocXPrint.Note9).
               run docx_setClipboardValue("Ticket",string(2) + "Note10", ttDocXPrint.Note10).
               run docx_setClipboardValue("Ticket",string(2) + "StartEndCodEquip", ttDocXPrint.StartEndCodEquip).
               run docx_setClipboardValue("Ticket",string(2) + "SpcIntr", ttDocXPrint.SpcIntr).               
               run docx_paste("Ticket").     
                         
               /*TicketCount = TicketCount + 1.
               IF TicketCount GE TicketsPerPage THEN DO: /* print page and set for next page */
                  run docx_paste("Ticket"). /* Output page to Word.*/
                  TicketCount = 1.
               END.
               */  
    	   END. /* FOR EACH ttDocXPrint */
    	   
    	   FOR EACH ttDocXPrint BY Idx:
    	       IF (ttDocXPrint.wScheduled = Yes AND ttDocXPrint.dScheduled = Yes) THEN NEXT. 
    	       /*display idx ttDocXPrint.CoProposal ttDocXPrint.Location. pause.*/
    	        run docx_setClipboardValue("Ticket",string(1) + "Week", ttDocXPrint.Week).
               run docx_setClipboardValue("Ticket",string(1) + "ProposalNumber", ttDocXPrint.CoProposal).  
               run docx_setClipboardValue("Ticket",string(1) + "Location", ttDocXPrint.Location).
               run docx_setClipboardValue("Ticket",string(1) + "Note1", ttDocXPrint.Note1).
               run docx_setClipboardValue("Ticket",string(1) + "Note2", ttDocXPrint.Note2).
               run docx_setClipboardValue("Ticket",string(1) + "Note3", ttDocXPrint.Note3).
               run docx_setClipboardValue("Ticket",string(1) + "Note4", ttDocXPrint.Note4).
               run docx_setClipboardValue("Ticket",string(1) + "Note5", ttDocXPrint.Note5).
               run docx_setClipboardValue("Ticket",string(1) + "Note6", ttDocXPrint.Note6).
               run docx_setClipboardValue("Ticket",string(1) + "Note7", ttDocXPrint.Note7).
               run docx_setClipboardValue("Ticket",string(1) + "Note8", ttDocXPrint.Note8).
               run docx_setClipboardValue("Ticket",string(1) + "Note9", ttDocXPrint.Note9).
               run docx_setClipboardValue("Ticket",string(1) + "Note10", ttDocXPrint.Note10).
               run docx_setClipboardValue("Ticket",string(1) + "StartEndCodEquip", ttDocXPrint.StartEndCodEquip).
               run docx_setClipboardValue("Ticket",string(1) + "SpcIntr", ttDocXPrint.SpcIntr).
               
    	        run docx_setClipboardValue("Ticket",string(2) + "Week", ttDocXPrint.Week).
               run docx_setClipboardValue("Ticket",string(2) + "ProposalNumber", ttDocXPrint.CoProposal).  
               run docx_setClipboardValue("Ticket",string(2) + "Location", ttDocXPrint.Location).
               run docx_setClipboardValue("Ticket",string(2) + "Note1", ttDocXPrint.Note1).
               run docx_setClipboardValue("Ticket",string(2) + "Note2", ttDocXPrint.Note2).
               run docx_setClipboardValue("Ticket",string(2) + "Note3", ttDocXPrint.Note3).
               run docx_setClipboardValue("Ticket",string(2) + "Note4", ttDocXPrint.Note4).
               run docx_setClipboardValue("Ticket",string(2) + "Note5", ttDocXPrint.Note5).
               run docx_setClipboardValue("Ticket",string(2) + "Note6", ttDocXPrint.Note6).
               run docx_setClipboardValue("Ticket",string(2) + "Note7", ttDocXPrint.Note7).
               run docx_setClipboardValue("Ticket",string(2) + "Note8", ttDocXPrint.Note8).
               run docx_setClipboardValue("Ticket",string(2) + "Note9", ttDocXPrint.Note9).
               run docx_setClipboardValue("Ticket",string(2) + "Note10", ttDocXPrint.Note10).
               run docx_setClipboardValue("Ticket",string(2) + "StartEndCodEquip", ttDocXPrint.StartEndCodEquip).
               run docx_setClipboardValue("Ticket",string(2) + "SpcIntr", ttDocXPrint.SpcIntr).               
               run docx_paste("Ticket").
               
    	        run docx_setClipboardValue("Ticket",string(1) + "Week", ttDocXPrint.Week).
               run docx_setClipboardValue("Ticket",string(1) + "ProposalNumber", ttDocXPrint.CoProposal).  
               run docx_setClipboardValue("Ticket",string(1) + "Location", ttDocXPrint.Location).
               run docx_setClipboardValue("Ticket",string(1) + "Note1", ttDocXPrint.Name +
                                                                        "                                       " +
                                                                        STRING(ttDocXPrint.Price,"$ZZ,ZZ9.99")   + 
                                                                        "      Weeks: " + ttDocXPrint.Weeks      +
                                                                        "      Days: " + ttDocXPrint.Days).
               run docx_setClipboardValue("Ticket",string(1) + "Note2", ttDocXPrint.Address).
               run docx_setClipboardValue("Ticket",string(1) + "Note3", ttDocXPrint.City).
               run docx_setClipboardValue("Ticket",string(1) + "Note4", ttDocXPrint.Phone).
               run docx_setClipboardValue("Ticket",string(1) + "Note5", ttDocXPrint.EMail).
               run docx_setClipboardValue("Ticket",string(1) + "Note6", 
                "____________________________________________________________________________________________________").
               run docx_setClipboardValue("Ticket",string(1) + "Note7", 
               "_____________________________________________________________________________________________________").
               run docx_setClipboardValue("Ticket",string(1) + "Note8", 
               "_____________________________________________________________________________________________________").
               run docx_setClipboardValue("Ticket",string(1) + "Note9", 
               "_____________________________________________________________________________________________________").
               run docx_setClipboardValue("Ticket",string(1) + "Note10", 
               "_____________________________________________________________________________________________________").
               run docx_setClipboardValue("Ticket",string(1) + "StartEndCodEquip", 
               "_____________________________________________________________________________________________________").
               run docx_setClipboardValue("Ticket",string(1) + "SpcIntr", 
               "_____________________________________________________________________________________________________").
               
    	        run docx_setClipboardValue("Ticket",string(2) + "Week", ttDocXPrint.Week).
               run docx_setClipboardValue("Ticket",string(2) + "ProposalNumber", ttDocXPrint.CoProposal).  
               run docx_setClipboardValue("Ticket",string(2) + "Location", ttDocXPrint.Location).
               run docx_setClipboardValue("Ticket",string(2) + "Note1", ttDocXPrint.Note1).
               run docx_setClipboardValue("Ticket",string(2) + "Note2", ttDocXPrint.Note2).
               run docx_setClipboardValue("Ticket",string(2) + "Note3", ttDocXPrint.Note3).
               run docx_setClipboardValue("Ticket",string(2) + "Note4", ttDocXPrint.Note4).
               run docx_setClipboardValue("Ticket",string(2) + "Note5", ttDocXPrint.Note5).
               run docx_setClipboardValue("Ticket",string(2) + "Note6", ttDocXPrint.Note6).
               run docx_setClipboardValue("Ticket",string(2) + "Note7", ttDocXPrint.Note7).
               run docx_setClipboardValue("Ticket",string(2) + "Note8", ttDocXPrint.Note8).
               run docx_setClipboardValue("Ticket",string(2) + "Note9", ttDocXPrint.Note9).
               run docx_setClipboardValue("Ticket",string(2) + "Note10", ttDocXPrint.Note10).
               run docx_setClipboardValue("Ticket",string(2) + "StartEndCodEquip", ttDocXPrint.StartEndCodEquip).
               run docx_setClipboardValue("Ticket",string(2) + "SpcIntr", ttDocXPrint.SpcIntr).               
               run docx_paste("Ticket").     
                         
               /*TicketCount = TicketCount + 1.
               IF TicketCount GE TicketsPerPage THEN DO: /* print page and set for next page */
                  run docx_paste("Ticket"). /* Output page to Word.*/
                  TicketCount = 1.
               END.
               */  
    	   END. /* FOR EACH ttDocXPrint */
    
          /*run docx_paste("Ticket"). /* Output final page to Word.*/ */
          FileName = os_getNextFile ( "c:\LaserTickets\MonthlyTicket" + 
                                      STRING(YEAR(TODAY))  + 
                                      STRING(MONTH(TODAY)) +
                                      STRING(DAY(TODAY)) +
                                      ".docx" ). 
          run docx_save(FileName).
          Cmd = "start winword.exe /t " + FileName.
          OS-command silent VALUE(Cmd).    
      END. /* IF Laser */    
      ****************************/
